
TP01G02_Firmware_CPP.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00800100  000019b8  00001a4c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000019b8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000045b  00800138  00800138  00001a84  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001a84  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001ab4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000278  00000000  00000000  00001af0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000043ae  00000000  00000000  00001d68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001396  00000000  00000000  00006116  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001539  00000000  00000000  000074ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000095c  00000000  00000000  000089e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000dc3  00000000  00000000  00009344  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002ead  00000000  00000000  0000a107  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000200  00000000  00000000  0000cfb4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2e 03 	jmp	0x65c	; 0x65c <__dtors_end>
       4:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
       8:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
       c:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      10:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      14:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      18:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      1c:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      20:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      24:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      28:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      2c:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      30:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      34:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      38:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      3c:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      40:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      44:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      48:	0c 94 11 0b 	jmp	0x1622	; 0x1622 <__vector_18>
      4c:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      50:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      54:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      58:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      5c:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      60:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>
      64:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__bad_interrupt>

00000068 <__trampolines_end>:
	...
      78:	00 10       	cpse	r0, r0
      7a:	10 10       	cpse	r1, r0
      7c:	10 10       	cpse	r1, r0
      7e:	10 00       	.word	0x0010	; ????
      80:	00 10       	cpse	r0, r0
      82:	10 00       	.word	0x0010	; ????
      84:	00 00       	nop
      86:	00 00       	nop
      88:	00 36       	cpi	r16, 0x60	; 96
      8a:	24 48       	sbci	r18, 0x84	; 132
	...
      98:	00 24       	eor	r0, r0
      9a:	24 7e       	andi	r18, 0xE4	; 228
      9c:	24 24       	eor	r2, r4
      9e:	24 24       	eor	r2, r4
      a0:	7e 24       	eor	r7, r14
      a2:	24 00       	.word	0x0024	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	00 10       	cpse	r0, r0
      aa:	38 7c       	andi	r19, 0xC8	; 200
      ac:	50 50       	subi	r21, 0x00	; 0
      ae:	38 14       	cp	r3, r8
      b0:	14 7c       	andi	r17, 0xC4	; 196
      b2:	38 10       	cpse	r3, r8
      b4:	00 00       	nop
      b6:	00 00       	nop
      b8:	00 20       	and	r0, r0
      ba:	50 52       	subi	r21, 0x20	; 32
      bc:	24 08       	sbc	r2, r4
      be:	10 24       	eor	r1, r0
      c0:	4a 0a       	sbc	r4, r26
      c2:	04 00       	.word	0x0004	; ????
      c4:	00 00       	nop
      c6:	00 00       	nop
      c8:	00 18       	sub	r0, r0
      ca:	24 24       	eor	r2, r4
      cc:	24 18       	sub	r2, r4
      ce:	29 47       	sbci	r18, 0x79	; 121
      d0:	42 46       	sbci	r20, 0x62	; 98
      d2:	39 00       	.word	0x0039	; ????
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	18 18       	sub	r1, r8
      da:	08 10       	cpse	r0, r8
	...
      e8:	00 08       	sbc	r0, r0
      ea:	10 10       	cpse	r1, r0
      ec:	20 20       	and	r2, r0
      ee:	20 20       	and	r2, r0
      f0:	10 10       	cpse	r1, r0
      f2:	08 00       	.word	0x0008	; ????
      f4:	00 00       	nop
      f6:	00 00       	nop
      f8:	00 10       	cpse	r0, r0
      fa:	08 08       	sbc	r0, r8
      fc:	04 04       	cpc	r0, r4
      fe:	04 04       	cpc	r0, r4
     100:	08 08       	sbc	r0, r8
     102:	10 00       	.word	0x0010	; ????
     104:	00 00       	nop
     106:	00 00       	nop
     108:	00 00       	nop
     10a:	49 2a       	or	r4, r25
     10c:	1c 7f       	andi	r17, 0xFC	; 252
     10e:	1c 2a       	or	r1, r28
     110:	49 00       	.word	0x0049	; ????
	...
     11a:	08 08       	sbc	r0, r8
     11c:	08 7f       	andi	r16, 0xF8	; 248
     11e:	08 08       	sbc	r0, r8
     120:	08 00       	.word	0x0008	; ????
	...
     12e:	00 00       	nop
     130:	00 18       	sub	r0, r0
     132:	18 08       	sbc	r1, r8
     134:	10 00       	.word	0x0010	; ????
	...
     13e:	00 3c       	cpi	r16, 0xC0	; 192
	...
     150:	00 18       	sub	r0, r0
     152:	18 00       	.word	0x0018	; ????
     154:	00 00       	nop
     156:	00 00       	nop
     158:	00 02       	muls	r16, r16
     15a:	04 04       	cpc	r0, r4
     15c:	08 08       	sbc	r0, r8
     15e:	10 10       	cpse	r1, r0
     160:	20 20       	and	r2, r0
     162:	40 00       	.word	0x0040	; ????
     164:	00 00       	nop
     166:	00 00       	nop
     168:	00 3c       	cpi	r16, 0xC0	; 192
     16a:	42 46       	sbci	r20, 0x62	; 98
     16c:	4a 4a       	sbci	r20, 0xAA	; 170
     16e:	52 52       	subi	r21, 0x22	; 34
     170:	62 42       	sbci	r22, 0x22	; 34
     172:	3c 00       	.word	0x003c	; ????
     174:	00 00       	nop
     176:	00 00       	nop
     178:	00 08       	sbc	r0, r0
     17a:	18 28       	or	r1, r8
     17c:	08 08       	sbc	r0, r8
     17e:	08 08       	sbc	r0, r8
     180:	08 08       	sbc	r0, r8
     182:	3e 00       	.word	0x003e	; ????
     184:	00 00       	nop
     186:	00 00       	nop
     188:	00 3c       	cpi	r16, 0xC0	; 192
     18a:	42 02       	muls	r20, r18
     18c:	04 08       	sbc	r0, r4
     18e:	10 20       	and	r1, r0
     190:	40 40       	sbci	r20, 0x00	; 0
     192:	7e 00       	.word	0x007e	; ????
     194:	00 00       	nop
     196:	00 00       	nop
     198:	00 3c       	cpi	r16, 0xC0	; 192
     19a:	42 02       	muls	r20, r18
     19c:	02 1c       	adc	r0, r2
     19e:	02 02       	muls	r16, r18
     1a0:	02 42       	sbci	r16, 0x22	; 34
     1a2:	3c 00       	.word	0x003c	; ????
     1a4:	00 00       	nop
     1a6:	00 00       	nop
     1a8:	00 04       	cpc	r0, r0
     1aa:	0c 14       	cp	r0, r12
     1ac:	24 44       	sbci	r18, 0x44	; 68
     1ae:	44 7e       	andi	r20, 0xE4	; 228
     1b0:	04 04       	cpc	r0, r4
     1b2:	04 00       	.word	0x0004	; ????
     1b4:	00 00       	nop
     1b6:	00 00       	nop
     1b8:	00 7e       	andi	r16, 0xE0	; 224
     1ba:	40 40       	sbci	r20, 0x00	; 0
     1bc:	7c 42       	sbci	r23, 0x2C	; 44
     1be:	02 02       	muls	r16, r18
     1c0:	42 3c       	cpi	r20, 0xC2	; 194
     1c2:	00 00       	nop
     1c4:	00 00       	nop
     1c6:	00 00       	nop
     1c8:	00 1c       	adc	r0, r0
     1ca:	20 40       	sbci	r18, 0x00	; 0
     1cc:	40 7c       	andi	r20, 0xC0	; 192
     1ce:	42 42       	sbci	r20, 0x22	; 34
     1d0:	42 42       	sbci	r20, 0x22	; 34
     1d2:	3c 00       	.word	0x003c	; ????
     1d4:	00 00       	nop
     1d6:	00 00       	nop
     1d8:	00 7e       	andi	r16, 0xE0	; 224
     1da:	02 02       	muls	r16, r18
     1dc:	04 08       	sbc	r0, r4
     1de:	7e 10       	cpse	r7, r14
     1e0:	10 10       	cpse	r1, r0
     1e2:	10 00       	.word	0x0010	; ????
     1e4:	00 00       	nop
     1e6:	00 00       	nop
     1e8:	00 3c       	cpi	r16, 0xC0	; 192
     1ea:	42 42       	sbci	r20, 0x22	; 34
     1ec:	42 3c       	cpi	r20, 0xC2	; 194
     1ee:	42 42       	sbci	r20, 0x22	; 34
     1f0:	42 42       	sbci	r20, 0x22	; 34
     1f2:	3c 00       	.word	0x003c	; ????
     1f4:	00 00       	nop
     1f6:	00 00       	nop
     1f8:	00 3c       	cpi	r16, 0xC0	; 192
     1fa:	42 42       	sbci	r20, 0x22	; 34
     1fc:	42 42       	sbci	r20, 0x22	; 34
     1fe:	3e 02       	muls	r19, r30
     200:	02 42       	sbci	r16, 0x22	; 34
     202:	3c 00       	.word	0x003c	; ????
	...
     20c:	00 18       	sub	r0, r0
     20e:	18 00       	.word	0x0018	; ????
     210:	00 18       	sub	r0, r0
     212:	18 00       	.word	0x0018	; ????
	...
     21c:	00 18       	sub	r0, r0
     21e:	18 00       	.word	0x0018	; ????
     220:	00 18       	sub	r0, r0
     222:	18 08       	sbc	r1, r8
     224:	10 00       	.word	0x0010	; ????
     226:	00 00       	nop
     228:	00 00       	nop
     22a:	02 04       	cpc	r0, r2
     22c:	08 10       	cpse	r0, r8
     22e:	20 10       	cpse	r2, r0
     230:	08 04       	cpc	r0, r8
     232:	02 00       	.word	0x0002	; ????
	...
     23c:	00 7e       	andi	r16, 0xE0	; 224
     23e:	00 00       	nop
     240:	00 7e       	andi	r16, 0xE0	; 224
	...
     24a:	40 20       	and	r4, r0
     24c:	10 08       	sbc	r1, r0
     24e:	04 08       	sbc	r0, r4
     250:	10 20       	and	r1, r0
     252:	40 00       	.word	0x0040	; ????
     254:	00 00       	nop
     256:	00 00       	nop
     258:	00 3c       	cpi	r16, 0xC0	; 192
     25a:	42 42       	sbci	r20, 0x22	; 34
     25c:	02 04       	cpc	r0, r2
     25e:	04 10       	cpse	r0, r4
     260:	00 10       	cpse	r0, r0
     262:	10 00       	.word	0x0010	; ????
     264:	00 00       	nop
     266:	00 00       	nop
     268:	00 3c       	cpi	r16, 0xC0	; 192
     26a:	42 99       	sbic	0x08, 2	; 8
     26c:	85 9d       	mul	r24, r5
     26e:	a5 9e       	mul	r10, r21
     270:	40 3e       	cpi	r20, 0xE0	; 224
     272:	00 00       	nop
     274:	00 00       	nop
     276:	00 00       	nop
     278:	00 3c       	cpi	r16, 0xC0	; 192
     27a:	42 42       	sbci	r20, 0x22	; 34
     27c:	42 7e       	andi	r20, 0xE2	; 226
     27e:	42 42       	sbci	r20, 0x22	; 34
     280:	42 42       	sbci	r20, 0x22	; 34
     282:	42 00       	.word	0x0042	; ????
     284:	00 00       	nop
     286:	00 00       	nop
     288:	00 7c       	andi	r16, 0xC0	; 192
     28a:	42 42       	sbci	r20, 0x22	; 34
     28c:	42 7c       	andi	r20, 0xC2	; 194
     28e:	42 42       	sbci	r20, 0x22	; 34
     290:	42 42       	sbci	r20, 0x22	; 34
     292:	7c 00       	.word	0x007c	; ????
     294:	00 00       	nop
     296:	00 00       	nop
     298:	00 3c       	cpi	r16, 0xC0	; 192
     29a:	42 40       	sbci	r20, 0x02	; 2
     29c:	40 40       	sbci	r20, 0x00	; 0
     29e:	40 40       	sbci	r20, 0x00	; 0
     2a0:	40 42       	sbci	r20, 0x20	; 32
     2a2:	3c 00       	.word	0x003c	; ????
     2a4:	00 00       	nop
     2a6:	00 00       	nop
     2a8:	00 7c       	andi	r16, 0xC0	; 192
     2aa:	42 42       	sbci	r20, 0x22	; 34
     2ac:	42 42       	sbci	r20, 0x22	; 34
     2ae:	42 42       	sbci	r20, 0x22	; 34
     2b0:	42 42       	sbci	r20, 0x22	; 34
     2b2:	7c 00       	.word	0x007c	; ????
     2b4:	00 00       	nop
     2b6:	00 00       	nop
     2b8:	00 7e       	andi	r16, 0xE0	; 224
     2ba:	40 40       	sbci	r20, 0x00	; 0
     2bc:	40 7e       	andi	r20, 0xE0	; 224
     2be:	40 40       	sbci	r20, 0x00	; 0
     2c0:	40 40       	sbci	r20, 0x00	; 0
     2c2:	7e 00       	.word	0x007e	; ????
     2c4:	00 00       	nop
     2c6:	00 00       	nop
     2c8:	00 7e       	andi	r16, 0xE0	; 224
     2ca:	40 40       	sbci	r20, 0x00	; 0
     2cc:	40 7e       	andi	r20, 0xE0	; 224
     2ce:	40 40       	sbci	r20, 0x00	; 0
     2d0:	40 40       	sbci	r20, 0x00	; 0
     2d2:	40 00       	.word	0x0040	; ????
     2d4:	00 00       	nop
     2d6:	00 00       	nop
     2d8:	00 3c       	cpi	r16, 0xC0	; 192
     2da:	42 42       	sbci	r20, 0x22	; 34
     2dc:	40 40       	sbci	r20, 0x00	; 0
     2de:	4e 42       	sbci	r20, 0x2E	; 46
     2e0:	42 42       	sbci	r20, 0x22	; 34
     2e2:	3c 00       	.word	0x003c	; ????
     2e4:	00 00       	nop
     2e6:	00 00       	nop
     2e8:	00 42       	sbci	r16, 0x20	; 32
     2ea:	42 42       	sbci	r20, 0x22	; 34
     2ec:	42 7e       	andi	r20, 0xE2	; 226
     2ee:	42 42       	sbci	r20, 0x22	; 34
     2f0:	42 42       	sbci	r20, 0x22	; 34
     2f2:	42 00       	.word	0x0042	; ????
     2f4:	00 00       	nop
     2f6:	00 00       	nop
     2f8:	00 3e       	cpi	r16, 0xE0	; 224
     2fa:	08 08       	sbc	r0, r8
     2fc:	08 08       	sbc	r0, r8
     2fe:	08 08       	sbc	r0, r8
     300:	08 08       	sbc	r0, r8
     302:	3e 00       	.word	0x003e	; ????
     304:	00 00       	nop
     306:	00 00       	nop
     308:	00 3e       	cpi	r16, 0xE0	; 224
     30a:	02 02       	muls	r16, r18
     30c:	02 02       	muls	r16, r18
     30e:	02 02       	muls	r16, r18
     310:	42 42       	sbci	r20, 0x22	; 34
     312:	3c 00       	.word	0x003c	; ????
     314:	00 00       	nop
     316:	00 00       	nop
     318:	00 42       	sbci	r16, 0x20	; 32
     31a:	42 44       	sbci	r20, 0x42	; 66
     31c:	48 70       	andi	r20, 0x08	; 8
     31e:	48 44       	sbci	r20, 0x48	; 72
     320:	42 42       	sbci	r20, 0x22	; 34
     322:	42 00       	.word	0x0042	; ????
     324:	00 00       	nop
     326:	00 00       	nop
     328:	00 40       	sbci	r16, 0x00	; 0
     32a:	40 40       	sbci	r20, 0x00	; 0
     32c:	40 40       	sbci	r20, 0x00	; 0
     32e:	40 40       	sbci	r20, 0x00	; 0
     330:	40 40       	sbci	r20, 0x00	; 0
     332:	7e 00       	.word	0x007e	; ????
     334:	00 00       	nop
     336:	00 00       	nop
     338:	00 42       	sbci	r16, 0x20	; 32
     33a:	66 5a       	subi	r22, 0xA6	; 166
     33c:	5a 42       	sbci	r21, 0x2A	; 42
     33e:	42 42       	sbci	r20, 0x22	; 34
     340:	42 42       	sbci	r20, 0x22	; 34
     342:	42 00       	.word	0x0042	; ????
     344:	00 00       	nop
     346:	00 00       	nop
     348:	00 42       	sbci	r16, 0x20	; 32
     34a:	62 52       	subi	r22, 0x22	; 34
     34c:	4a 46       	sbci	r20, 0x6A	; 106
     34e:	42 42       	sbci	r20, 0x22	; 34
     350:	42 42       	sbci	r20, 0x22	; 34
     352:	42 00       	.word	0x0042	; ????
     354:	00 00       	nop
     356:	00 00       	nop
     358:	00 3c       	cpi	r16, 0xC0	; 192
     35a:	42 42       	sbci	r20, 0x22	; 34
     35c:	42 42       	sbci	r20, 0x22	; 34
     35e:	42 42       	sbci	r20, 0x22	; 34
     360:	42 42       	sbci	r20, 0x22	; 34
     362:	3c 00       	.word	0x003c	; ????
     364:	00 00       	nop
     366:	00 00       	nop
     368:	00 7c       	andi	r16, 0xC0	; 192
     36a:	42 42       	sbci	r20, 0x22	; 34
     36c:	42 7c       	andi	r20, 0xC2	; 194
     36e:	40 40       	sbci	r20, 0x00	; 0
     370:	40 40       	sbci	r20, 0x00	; 0
     372:	40 00       	.word	0x0040	; ????
     374:	00 00       	nop
     376:	00 00       	nop
     378:	00 3c       	cpi	r16, 0xC0	; 192
     37a:	42 42       	sbci	r20, 0x22	; 34
     37c:	42 42       	sbci	r20, 0x22	; 34
     37e:	42 4a       	sbci	r20, 0xA2	; 162
     380:	4a 46       	sbci	r20, 0x6A	; 106
     382:	3c 02       	muls	r19, r28
     384:	00 00       	nop
     386:	00 00       	nop
     388:	00 7c       	andi	r16, 0xC0	; 192
     38a:	42 42       	sbci	r20, 0x22	; 34
     38c:	42 7c       	andi	r20, 0xC2	; 194
     38e:	60 50       	subi	r22, 0x00	; 0
     390:	48 44       	sbci	r20, 0x48	; 72
     392:	42 00       	.word	0x0042	; ????
     394:	00 00       	nop
     396:	00 00       	nop
     398:	00 3c       	cpi	r16, 0xC0	; 192
     39a:	42 40       	sbci	r20, 0x02	; 2
     39c:	40 3c       	cpi	r20, 0xC0	; 192
     39e:	02 02       	muls	r16, r18
     3a0:	02 42       	sbci	r16, 0x22	; 34
     3a2:	3c 00       	.word	0x003c	; ????
     3a4:	00 00       	nop
     3a6:	00 00       	nop
     3a8:	00 3e       	cpi	r16, 0xE0	; 224
     3aa:	08 08       	sbc	r0, r8
     3ac:	08 08       	sbc	r0, r8
     3ae:	08 08       	sbc	r0, r8
     3b0:	08 08       	sbc	r0, r8
     3b2:	08 00       	.word	0x0008	; ????
     3b4:	00 00       	nop
     3b6:	00 00       	nop
     3b8:	02 42       	sbci	r16, 0x22	; 34
     3ba:	42 42       	sbci	r20, 0x22	; 34
     3bc:	42 42       	sbci	r20, 0x22	; 34
     3be:	42 42       	sbci	r20, 0x22	; 34
     3c0:	42 42       	sbci	r20, 0x22	; 34
     3c2:	3c 00       	.word	0x003c	; ????
     3c4:	00 00       	nop
     3c6:	00 00       	nop
     3c8:	00 42       	sbci	r16, 0x20	; 32
     3ca:	42 42       	sbci	r20, 0x22	; 34
     3cc:	42 42       	sbci	r20, 0x22	; 34
     3ce:	42 24       	eor	r4, r2
     3d0:	24 18       	sub	r2, r4
     3d2:	18 00       	.word	0x0018	; ????
     3d4:	00 00       	nop
     3d6:	00 00       	nop
     3d8:	00 42       	sbci	r16, 0x20	; 32
     3da:	42 42       	sbci	r20, 0x22	; 34
     3dc:	42 42       	sbci	r20, 0x22	; 34
     3de:	42 5a       	subi	r20, 0xA2	; 162
     3e0:	5a 66       	ori	r21, 0x6A	; 106
     3e2:	42 00       	.word	0x0042	; ????
     3e4:	00 00       	nop
     3e6:	00 00       	nop
     3e8:	00 42       	sbci	r16, 0x20	; 32
     3ea:	42 42       	sbci	r20, 0x22	; 34
     3ec:	24 18       	sub	r2, r4
     3ee:	18 24       	eor	r1, r8
     3f0:	42 42       	sbci	r20, 0x22	; 34
     3f2:	42 00       	.word	0x0042	; ????
     3f4:	00 00       	nop
     3f6:	00 00       	nop
     3f8:	00 42       	sbci	r16, 0x20	; 32
     3fa:	42 24       	eor	r4, r2
     3fc:	14 08       	sbc	r1, r4
     3fe:	08 10       	cpse	r0, r8
     400:	10 20       	and	r1, r0
     402:	20 00       	.word	0x0020	; ????
     404:	00 00       	nop
     406:	00 00       	nop
     408:	00 7e       	andi	r16, 0xE0	; 224
     40a:	02 02       	muls	r16, r18
     40c:	04 08       	sbc	r0, r4
     40e:	10 20       	and	r1, r0
     410:	40 40       	sbci	r20, 0x00	; 0
     412:	7e 00       	.word	0x007e	; ????
     414:	00 00       	nop
     416:	00 00       	nop
     418:	00 1c       	adc	r0, r0
     41a:	10 10       	cpse	r1, r0
     41c:	10 10       	cpse	r1, r0
     41e:	10 10       	cpse	r1, r0
     420:	10 10       	cpse	r1, r0
     422:	1c 00       	.word	0x001c	; ????
     424:	00 00       	nop
     426:	00 00       	nop
     428:	00 40       	sbci	r16, 0x00	; 0
     42a:	20 20       	and	r2, r0
     42c:	10 10       	cpse	r1, r0
     42e:	08 08       	sbc	r0, r8
     430:	04 04       	cpc	r0, r4
     432:	02 00       	.word	0x0002	; ????
     434:	00 00       	nop
     436:	00 00       	nop
     438:	00 38       	cpi	r16, 0x80	; 128
     43a:	08 08       	sbc	r0, r8
     43c:	08 08       	sbc	r0, r8
     43e:	08 08       	sbc	r0, r8
     440:	08 08       	sbc	r0, r8
     442:	38 00       	.word	0x0038	; ????
     444:	00 00       	nop
     446:	00 00       	nop
     448:	00 08       	sbc	r0, r0
     44a:	14 22       	and	r1, r20
	...
     460:	00 00       	nop
     462:	00 7e       	andi	r16, 0xE0	; 224
     464:	00 00       	nop
     466:	00 00       	nop
     468:	00 60       	ori	r16, 0x00	; 0
     46a:	20 10       	cpse	r2, r0
	...
     47c:	3c 02       	muls	r19, r28
     47e:	3e 42       	sbci	r19, 0x2E	; 46
     480:	42 42       	sbci	r20, 0x22	; 34
     482:	3e 00       	.word	0x003e	; ????
     484:	00 00       	nop
     486:	00 00       	nop
     488:	00 00       	nop
     48a:	40 40       	sbci	r20, 0x00	; 0
     48c:	40 7c       	andi	r20, 0xC0	; 192
     48e:	42 42       	sbci	r20, 0x22	; 34
     490:	42 42       	sbci	r20, 0x22	; 34
     492:	7c 00       	.word	0x007c	; ????
	...
     49c:	00 3c       	cpi	r16, 0xC0	; 192
     49e:	42 40       	sbci	r20, 0x02	; 2
     4a0:	40 42       	sbci	r20, 0x20	; 32
     4a2:	3c 00       	.word	0x003c	; ????
     4a4:	00 00       	nop
     4a6:	00 00       	nop
     4a8:	00 00       	nop
     4aa:	02 02       	muls	r16, r18
     4ac:	02 3a       	cpi	r16, 0xA2	; 162
     4ae:	46 42       	sbci	r20, 0x26	; 38
     4b0:	42 42       	sbci	r20, 0x22	; 34
     4b2:	3e 00       	.word	0x003e	; ????
	...
     4bc:	00 3c       	cpi	r16, 0xC0	; 192
     4be:	42 7e       	andi	r20, 0xE2	; 226
     4c0:	40 42       	sbci	r20, 0x20	; 32
     4c2:	3c 00       	.word	0x003c	; ????
     4c4:	00 00       	nop
     4c6:	00 00       	nop
     4c8:	00 00       	nop
     4ca:	1c 22       	and	r1, r28
     4cc:	20 20       	and	r2, r0
     4ce:	78 20       	and	r7, r8
     4d0:	20 20       	and	r2, r0
     4d2:	20 20       	and	r2, r0
	...
     4dc:	00 3c       	cpi	r16, 0xC0	; 192
     4de:	42 42       	sbci	r20, 0x22	; 34
     4e0:	42 46       	sbci	r20, 0x62	; 98
     4e2:	3a 02       	muls	r19, r26
     4e4:	22 42       	sbci	r18, 0x22	; 34
     4e6:	3c 00       	.word	0x003c	; ????
     4e8:	00 00       	nop
     4ea:	40 40       	sbci	r20, 0x00	; 0
     4ec:	40 5c       	subi	r20, 0xC0	; 192
     4ee:	62 42       	sbci	r22, 0x22	; 34
     4f0:	42 42       	sbci	r20, 0x22	; 34
     4f2:	42 00       	.word	0x0042	; ????
     4f4:	00 00       	nop
     4f6:	00 00       	nop
     4f8:	00 00       	nop
     4fa:	08 08       	sbc	r0, r8
     4fc:	00 38       	cpi	r16, 0x80	; 128
     4fe:	08 08       	sbc	r0, r8
     500:	08 08       	sbc	r0, r8
     502:	3e 00       	.word	0x003e	; ????
     504:	00 00       	nop
     506:	00 00       	nop
     508:	00 00       	nop
     50a:	00 02       	muls	r16, r16
     50c:	02 00       	.word	0x0002	; ????
     50e:	0e 02       	muls	r16, r30
     510:	02 02       	muls	r16, r18
     512:	02 02       	muls	r16, r18
     514:	42 42       	sbci	r20, 0x22	; 34
     516:	3c 00       	.word	0x003c	; ????
     518:	00 00       	nop
     51a:	00 40       	sbci	r16, 0x00	; 0
     51c:	40 40       	sbci	r20, 0x00	; 0
     51e:	44 48       	sbci	r20, 0x84	; 132
     520:	70 48       	sbci	r23, 0x80	; 128
     522:	44 00       	.word	0x0044	; ????
     524:	00 00       	nop
     526:	00 00       	nop
     528:	00 00       	nop
     52a:	38 08       	sbc	r3, r8
     52c:	08 08       	sbc	r0, r8
     52e:	08 08       	sbc	r0, r8
     530:	08 08       	sbc	r0, r8
     532:	3e 00       	.word	0x003e	; ????
	...
     53c:	00 00       	nop
     53e:	76 49       	sbci	r23, 0x96	; 150
     540:	49 49       	sbci	r20, 0x99	; 153
     542:	49 00       	.word	0x0049	; ????
	...
     54c:	00 00       	nop
     54e:	5c 62       	ori	r21, 0x2C	; 44
     550:	42 42       	sbci	r20, 0x22	; 34
     552:	42 00       	.word	0x0042	; ????
	...
     55c:	00 3c       	cpi	r16, 0xC0	; 192
     55e:	42 42       	sbci	r20, 0x22	; 34
     560:	42 42       	sbci	r20, 0x22	; 34
     562:	3c 00       	.word	0x003c	; ????
	...
     56c:	00 2e       	mov	r0, r16
     56e:	62 42       	sbci	r22, 0x22	; 34
     570:	42 42       	sbci	r20, 0x22	; 34
     572:	7c 40       	sbci	r23, 0x0C	; 12
     574:	40 40       	sbci	r20, 0x00	; 0
     576:	40 00       	.word	0x0040	; ????
     578:	00 00       	nop
     57a:	00 00       	nop
     57c:	00 3a       	cpi	r16, 0xA0	; 160
     57e:	46 42       	sbci	r20, 0x26	; 38
     580:	42 42       	sbci	r20, 0x22	; 34
     582:	3e 02       	muls	r19, r30
     584:	02 02       	muls	r16, r18
     586:	02 00       	.word	0x0002	; ????
     588:	00 00       	nop
     58a:	00 00       	nop
     58c:	00 4c       	sbci	r16, 0xC0	; 192
     58e:	52 60       	ori	r21, 0x02	; 2
     590:	40 40       	sbci	r20, 0x00	; 0
     592:	40 00       	.word	0x0040	; ????
	...
     59c:	3c 42       	sbci	r19, 0x2C	; 44
     59e:	40 3c       	cpi	r20, 0xC0	; 192
     5a0:	02 42       	sbci	r16, 0x22	; 34
     5a2:	3c 00       	.word	0x003c	; ????
     5a4:	00 00       	nop
     5a6:	00 00       	nop
     5a8:	00 00       	nop
     5aa:	20 20       	and	r2, r0
     5ac:	20 78       	andi	r18, 0x80	; 128
     5ae:	20 20       	and	r2, r0
     5b0:	20 22       	and	r2, r16
     5b2:	1c 00       	.word	0x001c	; ????
	...
     5bc:	42 42       	sbci	r20, 0x22	; 34
     5be:	42 42       	sbci	r20, 0x22	; 34
     5c0:	46 4a       	sbci	r20, 0xA6	; 166
     5c2:	33 00       	.word	0x0033	; ????
	...
     5cc:	41 41       	sbci	r20, 0x11	; 17
     5ce:	22 22       	and	r2, r18
     5d0:	14 14       	cp	r1, r4
     5d2:	08 00       	.word	0x0008	; ????
	...
     5dc:	41 41       	sbci	r20, 0x11	; 17
     5de:	49 49       	sbci	r20, 0x99	; 153
     5e0:	49 55       	subi	r20, 0x59	; 89
     5e2:	22 00       	.word	0x0022	; ????
	...
     5ec:	41 22       	and	r4, r17
     5ee:	14 08       	sbc	r1, r4
     5f0:	14 22       	and	r1, r20
     5f2:	41 00       	.word	0x0041	; ????
	...
     5fc:	42 42       	sbci	r20, 0x22	; 34
     5fe:	42 42       	sbci	r20, 0x22	; 34
     600:	42 46       	sbci	r20, 0x62	; 98
     602:	3a 02       	muls	r19, r26
     604:	02 42       	sbci	r16, 0x22	; 34
     606:	3c 00       	.word	0x003c	; ????
     608:	00 00       	nop
     60a:	00 00       	nop
     60c:	7e 04       	cpc	r7, r14
     60e:	08 10       	cpse	r0, r8
     610:	20 80       	ld	r2, Z
     612:	7e 00       	.word	0x007e	; ????
     614:	00 00       	nop
     616:	00 00       	nop
     618:	00 0c       	add	r0, r0
     61a:	10 10       	cpse	r1, r0
     61c:	10 10       	cpse	r1, r0
     61e:	60 10       	cpse	r6, r0
     620:	10 10       	cpse	r1, r0
     622:	10 0c       	add	r1, r0
     624:	00 00       	nop
     626:	00 00       	nop
     628:	00 08       	sbc	r0, r0
     62a:	08 08       	sbc	r0, r8
     62c:	08 08       	sbc	r0, r8
     62e:	08 00       	.word	0x0008	; ????
     630:	00 08       	sbc	r0, r0
     632:	08 08       	sbc	r0, r8
     634:	08 08       	sbc	r0, r8
     636:	08 00       	.word	0x0008	; ????
     638:	00 30       	cpi	r16, 0x00	; 0
     63a:	08 08       	sbc	r0, r8
     63c:	08 08       	sbc	r0, r8
     63e:	06 08       	sbc	r0, r6
     640:	08 08       	sbc	r0, r8
     642:	08 30       	cpi	r16, 0x08	; 8
     644:	00 00       	nop
     646:	00 00       	nop
     648:	00 32       	cpi	r16, 0x20	; 32
     64a:	4c 00       	.word	0x004c	; ????
	...

00000658 <__ctors_start>:
     658:	39 0b       	sbc	r19, r25

0000065a <__ctors_end>:
     65a:	40 0b       	sbc	r20, r16

0000065c <__dtors_end>:
     65c:	11 24       	eor	r1, r1
     65e:	1f be       	out	0x3f, r1	; 63
     660:	cf ef       	ldi	r28, 0xFF	; 255
     662:	d8 e0       	ldi	r29, 0x08	; 8
     664:	de bf       	out	0x3e, r29	; 62
     666:	cd bf       	out	0x3d, r28	; 61

00000668 <__do_copy_data>:
     668:	11 e0       	ldi	r17, 0x01	; 1
     66a:	a0 e0       	ldi	r26, 0x00	; 0
     66c:	b1 e0       	ldi	r27, 0x01	; 1
     66e:	e8 eb       	ldi	r30, 0xB8	; 184
     670:	f9 e1       	ldi	r31, 0x19	; 25
     672:	02 c0       	rjmp	.+4      	; 0x678 <__do_copy_data+0x10>
     674:	05 90       	lpm	r0, Z+
     676:	0d 92       	st	X+, r0
     678:	a8 33       	cpi	r26, 0x38	; 56
     67a:	b1 07       	cpc	r27, r17
     67c:	d9 f7       	brne	.-10     	; 0x674 <__do_copy_data+0xc>

0000067e <__do_clear_bss>:
     67e:	25 e0       	ldi	r18, 0x05	; 5
     680:	a8 e3       	ldi	r26, 0x38	; 56
     682:	b1 e0       	ldi	r27, 0x01	; 1
     684:	01 c0       	rjmp	.+2      	; 0x688 <.do_clear_bss_start>

00000686 <.do_clear_bss_loop>:
     686:	1d 92       	st	X+, r1

00000688 <.do_clear_bss_start>:
     688:	a3 39       	cpi	r26, 0x93	; 147
     68a:	b2 07       	cpc	r27, r18
     68c:	e1 f7       	brne	.-8      	; 0x686 <.do_clear_bss_loop>

0000068e <__do_global_ctors>:
     68e:	13 e0       	ldi	r17, 0x03	; 3
     690:	cd e2       	ldi	r28, 0x2D	; 45
     692:	d3 e0       	ldi	r29, 0x03	; 3
     694:	04 c0       	rjmp	.+8      	; 0x69e <__do_global_ctors+0x10>
     696:	21 97       	sbiw	r28, 0x01	; 1
     698:	fe 01       	movw	r30, r28
     69a:	0e 94 ba 0c 	call	0x1974	; 0x1974 <__tablejump2__>
     69e:	cc 32       	cpi	r28, 0x2C	; 44
     6a0:	d1 07       	cpc	r29, r17
     6a2:	c9 f7       	brne	.-14     	; 0x696 <__do_global_ctors+0x8>
     6a4:	0e 94 fd 0a 	call	0x15fa	; 0x15fa <main>
     6a8:	0c 94 cf 0c 	jmp	0x199e	; 0x199e <__do_global_dtors>

000006ac <__bad_interrupt>:
     6ac:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000006b0 <_ZN4UART4initEv>:
#include "uart.h"



void UART::init() {
	UBRR0H = (uint8_t)((UBRR_VAL & 0xFF00) >> 8);
     6b0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (uint8_t) UBRR_VAL & 0xFF;
     6b4:	83 e3       	ldi	r24, 0x33	; 51
     6b6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	//Enable receiver, transmitter and receive complete interrupt
	UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0);
     6ba:	88 e9       	ldi	r24, 0x98	; 152
     6bc:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	//Set frame format: 8 data bits, 1 even parity bit, 2 stop bits
	UCSR0C = (1<<UPM01)|(1<<USBS0)|(3<<UCSZ00);
     6c0:	8e e2       	ldi	r24, 0x2E	; 46
     6c2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	sei();
     6c6:	78 94       	sei
     6c8:	08 95       	ret

000006ca <_ZN4UART8transmitEc>:
}

void UART::transmit( char data ) {
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) );
     6ca:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     6ce:	95 ff       	sbrs	r25, 5
     6d0:	fc cf       	rjmp	.-8      	; 0x6ca <_ZN4UART8transmitEc>
	asm volatile ("nop");
     6d2:	00 00       	nop
	/* Put data into buffer, sends the data */
	UDR0 = data;
     6d4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     6d8:	08 95       	ret

000006da <_ZN4UART5printEPc>:
}

void UART::print(char* str) {
     6da:	0f 93       	push	r16
     6dc:	1f 93       	push	r17
     6de:	cf 93       	push	r28
	if(str != 0) {
     6e0:	00 97       	sbiw	r24, 0x00	; 0
     6e2:	71 f0       	breq	.+28     	; 0x700 <_ZN4UART5printEPc+0x26>
     6e4:	8c 01       	movw	r16, r24
     6e6:	90 e0       	ldi	r25, 0x00	; 0
		uint8_t i = 0;
		char chr;
		while((chr = str[i++]) != 0) {
     6e8:	c1 e0       	ldi	r28, 0x01	; 1
     6ea:	c9 0f       	add	r28, r25
     6ec:	f8 01       	movw	r30, r16
     6ee:	e9 0f       	add	r30, r25
     6f0:	f1 1d       	adc	r31, r1
     6f2:	80 81       	ld	r24, Z
     6f4:	88 23       	and	r24, r24
     6f6:	21 f0       	breq	.+8      	; 0x700 <_ZN4UART5printEPc+0x26>
			transmit(chr);
     6f8:	0e 94 65 03 	call	0x6ca	; 0x6ca <_ZN4UART8transmitEc>

void UART::print(char* str) {
	if(str != 0) {
		uint8_t i = 0;
		char chr;
		while((chr = str[i++]) != 0) {
     6fc:	9c 2f       	mov	r25, r28
     6fe:	f4 cf       	rjmp	.-24     	; 0x6e8 <_ZN4UART5printEPc+0xe>
			transmit(chr);
		}
	}
}
     700:	cf 91       	pop	r28
     702:	1f 91       	pop	r17
     704:	0f 91       	pop	r16
     706:	08 95       	ret

00000708 <_ZN4UART7printlnEPc>:

void UART::println(char* str) {
	print(str);
     708:	0e 94 6d 03 	call	0x6da	; 0x6da <_ZN4UART5printEPc>
	transmit('\r');
     70c:	8d e0       	ldi	r24, 0x0D	; 13
     70e:	0e 94 65 03 	call	0x6ca	; 0x6ca <_ZN4UART8transmitEc>
	transmit('\n');
     712:	8a e0       	ldi	r24, 0x0A	; 10
     714:	0e 94 65 03 	call	0x6ca	; 0x6ca <_ZN4UART8transmitEc>
     718:	08 95       	ret

0000071a <_ZN3SPIC1Ev>:
 */ 

#include "spi.h"
#include "definitions.h"

SPI::SPI() {
     71a:	08 95       	ret

0000071c <_ZN3SPID1Ev>:
};

SPI::~SPI() {
     71c:	08 95       	ret

0000071e <_ZN3SPI8spi_initEv>:
};

void SPI::spi_init() {
	PWR_RED_REG &= ~(1 << SPI_PWR_RED_BIT);
     71e:	e4 e6       	ldi	r30, 0x64	; 100
     720:	f0 e0       	ldi	r31, 0x00	; 0
     722:	80 81       	ld	r24, Z
     724:	8b 7f       	andi	r24, 0xFB	; 251
     726:	80 83       	st	Z, r24
	SPI_DDR |= (1 << MOSI_PIN | 1 << SCK_PIN);
     728:	84 b1       	in	r24, 0x04	; 4
     72a:	88 62       	ori	r24, 0x28	; 40
     72c:	84 b9       	out	0x04, r24	; 4
	SPI_DDR &= ~(1 << MISO_PIN);
     72e:	84 b1       	in	r24, 0x04	; 4
     730:	8f 7e       	andi	r24, 0xEF	; 239
     732:	84 b9       	out	0x04, r24	; 4
	SPI_CONTROL_REGISTER |= (1 << SPI_ENABLE_BIT) | (1 << SPI_MASTER_MODE_BIT) |
	(0 << SPI_RATE_BIT_0) | (0 << SPI_RATE_BIT_1);
     734:	8c b5       	in	r24, 0x2c	; 44
     736:	80 65       	ori	r24, 0x50	; 80
     738:	8c bd       	out	0x2c, r24	; 44
	SPI_STATUS_REGISTER |= (0 << SPI_RATE_2X_BIT);
     73a:	8d b5       	in	r24, 0x2d	; 45
     73c:	8d bd       	out	0x2d, r24	; 45
     73e:	08 95       	ret

00000740 <_ZN3SPI9send_byteEh>:
}

void SPI::send_byte(uint8_t byte) {
	
	asm volatile ("nop");
     740:	00 00       	nop
	asm volatile ("nop");
     742:	00 00       	nop
	SPI_DATA_REGISTER = byte;
     744:	8e bd       	out	0x2e, r24	; 46
	while (!(SPI_STATUS_REGISTER & (1 << SPI_FINISHED_BIT)));
     746:	0d b4       	in	r0, 0x2d	; 45
     748:	07 fe       	sbrs	r0, 7
     74a:	fd cf       	rjmp	.-6      	; 0x746 <_ZN3SPI9send_byteEh+0x6>
	
     74c:	08 95       	ret

0000074e <_ZN3EpdD1Ev>:
    SendCommand(WRITE_RAM);
    /* send the image data */
    for (int i = 0; i < this->width / 8 * this->height; i++) {
        SendData(pgm_read_byte(&image_buffer[i]));
    }
}
     74e:	0e 94 5b 06 	call	0xcb6	; 0xcb6 <_ZN5EpdIfD1Ev>
     752:	08 95       	ret

00000754 <_ZN3EpdC1Ev>:
     754:	cf 93       	push	r28
     756:	df 93       	push	r29
     758:	ec 01       	movw	r28, r24
     75a:	0e 94 58 06 	call	0xcb0	; 0xcb0 <_ZN5EpdIfC1Ev>
     75e:	19 86       	std	Y+9, r1	; 0x09
     760:	18 86       	std	Y+8, r1	; 0x08
     762:	82 e0       	ldi	r24, 0x02	; 2
     764:	90 e0       	ldi	r25, 0x00	; 0
     766:	9b 87       	std	Y+11, r25	; 0x0b
     768:	8a 87       	std	Y+10, r24	; 0x0a
     76a:	81 e0       	ldi	r24, 0x01	; 1
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	9d 87       	std	Y+13, r25	; 0x0d
     770:	8c 87       	std	Y+12, r24	; 0x0c
     772:	86 e0       	ldi	r24, 0x06	; 6
     774:	90 e0       	ldi	r25, 0x00	; 0
     776:	9f 87       	std	Y+15, r25	; 0x0f
     778:	8e 87       	std	Y+14, r24	; 0x0e
     77a:	80 e8       	ldi	r24, 0x80	; 128
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	a0 e0       	ldi	r26, 0x00	; 0
     780:	b0 e0       	ldi	r27, 0x00	; 0
     782:	88 83       	st	Y, r24
     784:	99 83       	std	Y+1, r25	; 0x01
     786:	aa 83       	std	Y+2, r26	; 0x02
     788:	bb 83       	std	Y+3, r27	; 0x03
     78a:	88 e2       	ldi	r24, 0x28	; 40
     78c:	91 e0       	ldi	r25, 0x01	; 1
     78e:	a0 e0       	ldi	r26, 0x00	; 0
     790:	b0 e0       	ldi	r27, 0x00	; 0
     792:	8c 83       	std	Y+4, r24	; 0x04
     794:	9d 83       	std	Y+5, r25	; 0x05
     796:	ae 83       	std	Y+6, r26	; 0x06
     798:	bf 83       	std	Y+7, r27	; 0x07
     79a:	df 91       	pop	r29
     79c:	cf 91       	pop	r28
     79e:	08 95       	ret

000007a0 <_ZN3Epd11SendCommandEh>:
     7a0:	cf 93       	push	r28
     7a2:	c6 2f       	mov	r28, r22
     7a4:	60 e0       	ldi	r22, 0x00	; 0
     7a6:	fc 01       	movw	r30, r24
     7a8:	82 85       	ldd	r24, Z+10	; 0x0a
     7aa:	0e 94 5e 06 	call	0xcbc	; 0xcbc <_ZN5EpdIf12DigitalWriteEhh>
     7ae:	8c 2f       	mov	r24, r28
     7b0:	0e 94 da 06 	call	0xdb4	; 0xdb4 <_ZN5EpdIf11SpiTransferEh>
     7b4:	cf 91       	pop	r28
     7b6:	08 95       	ret

000007b8 <_ZN3Epd8SendDataEh>:
     7b8:	cf 93       	push	r28
     7ba:	c6 2f       	mov	r28, r22
     7bc:	61 e0       	ldi	r22, 0x01	; 1
     7be:	fc 01       	movw	r30, r24
     7c0:	82 85       	ldd	r24, Z+10	; 0x0a
     7c2:	0e 94 5e 06 	call	0xcbc	; 0xcbc <_ZN5EpdIf12DigitalWriteEhh>
     7c6:	8c 2f       	mov	r24, r28
     7c8:	0e 94 da 06 	call	0xdb4	; 0xdb4 <_ZN5EpdIf11SpiTransferEh>
     7cc:	cf 91       	pop	r28
     7ce:	08 95       	ret

000007d0 <_ZN3Epd13WaitUntilIdleEv>:
     7d0:	cf 93       	push	r28
     7d2:	df 93       	push	r29
     7d4:	ec 01       	movw	r28, r24
     7d6:	8e 85       	ldd	r24, Y+14	; 0x0e
     7d8:	0e 94 74 06 	call	0xce8	; 0xce8 <_ZN5EpdIf11DigitalReadEh>
     7dc:	81 30       	cpi	r24, 0x01	; 1
     7de:	29 f4       	brne	.+10     	; 0x7ea <_ZN3Epd13WaitUntilIdleEv+0x1a>
     7e0:	81 e0       	ldi	r24, 0x01	; 1
     7e2:	90 e0       	ldi	r25, 0x00	; 0
     7e4:	0e 94 8a 06 	call	0xd14	; 0xd14 <_ZN5EpdIf7DelayMsEj>
     7e8:	f6 cf       	rjmp	.-20     	; 0x7d6 <_ZN3Epd13WaitUntilIdleEv+0x6>
     7ea:	df 91       	pop	r29
     7ec:	cf 91       	pop	r28
     7ee:	08 95       	ret

000007f0 <_ZN3Epd5ResetEv>:
     7f0:	cf 93       	push	r28
     7f2:	df 93       	push	r29
     7f4:	ec 01       	movw	r28, r24
     7f6:	60 e0       	ldi	r22, 0x00	; 0
     7f8:	88 85       	ldd	r24, Y+8	; 0x08
     7fa:	0e 94 5e 06 	call	0xcbc	; 0xcbc <_ZN5EpdIf12DigitalWriteEhh>
     7fe:	88 ec       	ldi	r24, 0xC8	; 200
     800:	90 e0       	ldi	r25, 0x00	; 0
     802:	0e 94 8a 06 	call	0xd14	; 0xd14 <_ZN5EpdIf7DelayMsEj>
     806:	61 e0       	ldi	r22, 0x01	; 1
     808:	88 85       	ldd	r24, Y+8	; 0x08
     80a:	0e 94 5e 06 	call	0xcbc	; 0xcbc <_ZN5EpdIf12DigitalWriteEhh>
     80e:	88 ec       	ldi	r24, 0xC8	; 200
     810:	90 e0       	ldi	r25, 0x00	; 0
     812:	0e 94 8a 06 	call	0xd14	; 0xd14 <_ZN5EpdIf7DelayMsEj>
     816:	df 91       	pop	r29
     818:	cf 91       	pop	r28
     81a:	08 95       	ret

0000081c <_ZN3Epd6SetLutEPKh>:
     81c:	0f 93       	push	r16
     81e:	1f 93       	push	r17
     820:	cf 93       	push	r28
     822:	df 93       	push	r29
     824:	8c 01       	movw	r16, r24
     826:	dc 01       	movw	r26, r24
     828:	51 96       	adiw	r26, 0x11	; 17
     82a:	7c 93       	st	X, r23
     82c:	6e 93       	st	-X, r22
     82e:	50 97       	sbiw	r26, 0x10	; 16
     830:	62 e3       	ldi	r22, 0x32	; 50
     832:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <_ZN3Epd11SendCommandEh>
     836:	c0 e0       	ldi	r28, 0x00	; 0
     838:	d0 e0       	ldi	r29, 0x00	; 0
     83a:	ce 31       	cpi	r28, 0x1E	; 30
     83c:	d1 05       	cpc	r29, r1
     83e:	6c f4       	brge	.+26     	; 0x85a <_ZN3Epd6SetLutEPKh+0x3e>
     840:	d8 01       	movw	r26, r16
     842:	50 96       	adiw	r26, 0x10	; 16
     844:	ed 91       	ld	r30, X+
     846:	fc 91       	ld	r31, X
     848:	51 97       	sbiw	r26, 0x11	; 17
     84a:	ec 0f       	add	r30, r28
     84c:	fd 1f       	adc	r31, r29
     84e:	60 81       	ld	r22, Z
     850:	c8 01       	movw	r24, r16
     852:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     856:	21 96       	adiw	r28, 0x01	; 1
     858:	f0 cf       	rjmp	.-32     	; 0x83a <_ZN3Epd6SetLutEPKh+0x1e>
     85a:	df 91       	pop	r29
     85c:	cf 91       	pop	r28
     85e:	1f 91       	pop	r17
     860:	0f 91       	pop	r16
     862:	08 95       	ret

00000864 <_ZN3Epd4InitEPKh>:
     864:	0f 93       	push	r16
     866:	1f 93       	push	r17
     868:	cf 93       	push	r28
     86a:	df 93       	push	r29
     86c:	ec 01       	movw	r28, r24
     86e:	8b 01       	movw	r16, r22
     870:	0e 94 e3 06 	call	0xdc6	; 0xdc6 <_ZN5EpdIf6IfInitEv>
     874:	81 11       	cpse	r24, r1
     876:	55 c0       	rjmp	.+170    	; 0x922 <__stack+0x23>
     878:	19 8b       	std	Y+17, r17	; 0x11
     87a:	08 8b       	std	Y+16, r16	; 0x10
     87c:	ce 01       	movw	r24, r28
     87e:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <_ZN3Epd5ResetEv>
     882:	61 e0       	ldi	r22, 0x01	; 1
     884:	ce 01       	movw	r24, r28
     886:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <_ZN3Epd11SendCommandEh>
     88a:	67 e2       	ldi	r22, 0x27	; 39
     88c:	ce 01       	movw	r24, r28
     88e:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     892:	61 e0       	ldi	r22, 0x01	; 1
     894:	ce 01       	movw	r24, r28
     896:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     89a:	60 e0       	ldi	r22, 0x00	; 0
     89c:	ce 01       	movw	r24, r28
     89e:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     8a2:	6c e0       	ldi	r22, 0x0C	; 12
     8a4:	ce 01       	movw	r24, r28
     8a6:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <_ZN3Epd11SendCommandEh>
     8aa:	67 ed       	ldi	r22, 0xD7	; 215
     8ac:	ce 01       	movw	r24, r28
     8ae:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     8b2:	66 ed       	ldi	r22, 0xD6	; 214
     8b4:	ce 01       	movw	r24, r28
     8b6:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     8ba:	6d e9       	ldi	r22, 0x9D	; 157
     8bc:	ce 01       	movw	r24, r28
     8be:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     8c2:	6c e2       	ldi	r22, 0x2C	; 44
     8c4:	ce 01       	movw	r24, r28
     8c6:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <_ZN3Epd11SendCommandEh>
     8ca:	68 ea       	ldi	r22, 0xA8	; 168
     8cc:	ce 01       	movw	r24, r28
     8ce:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     8d2:	6a e3       	ldi	r22, 0x3A	; 58
     8d4:	ce 01       	movw	r24, r28
     8d6:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <_ZN3Epd11SendCommandEh>
     8da:	6a e1       	ldi	r22, 0x1A	; 26
     8dc:	ce 01       	movw	r24, r28
     8de:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     8e2:	6b e3       	ldi	r22, 0x3B	; 59
     8e4:	ce 01       	movw	r24, r28
     8e6:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <_ZN3Epd11SendCommandEh>
     8ea:	68 e0       	ldi	r22, 0x08	; 8
     8ec:	ce 01       	movw	r24, r28
     8ee:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     8f2:	6c e3       	ldi	r22, 0x3C	; 60
     8f4:	ce 01       	movw	r24, r28
     8f6:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <_ZN3Epd11SendCommandEh>
     8fa:	63 e0       	ldi	r22, 0x03	; 3
     8fc:	ce 01       	movw	r24, r28
     8fe:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     902:	61 e1       	ldi	r22, 0x11	; 17
     904:	ce 01       	movw	r24, r28
     906:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <_ZN3Epd11SendCommandEh>
     90a:	63 e0       	ldi	r22, 0x03	; 3
     90c:	ce 01       	movw	r24, r28
     90e:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     912:	68 89       	ldd	r22, Y+16	; 0x10
     914:	79 89       	ldd	r23, Y+17	; 0x11
     916:	ce 01       	movw	r24, r28
     918:	0e 94 0e 04 	call	0x81c	; 0x81c <_ZN3Epd6SetLutEPKh>
     91c:	80 e0       	ldi	r24, 0x00	; 0
     91e:	90 e0       	ldi	r25, 0x00	; 0
     920:	02 c0       	rjmp	.+4      	; 0x926 <__stack+0x27>
     922:	8f ef       	ldi	r24, 0xFF	; 255
     924:	9f ef       	ldi	r25, 0xFF	; 255
     926:	df 91       	pop	r29
     928:	cf 91       	pop	r28
     92a:	1f 91       	pop	r17
     92c:	0f 91       	pop	r16
     92e:	08 95       	ret

00000930 <_ZN3Epd12DisplayFrameEv>:
     930:	cf 93       	push	r28
     932:	df 93       	push	r29
     934:	ec 01       	movw	r28, r24
     936:	62 e2       	ldi	r22, 0x22	; 34
     938:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <_ZN3Epd11SendCommandEh>
     93c:	64 ec       	ldi	r22, 0xC4	; 196
     93e:	ce 01       	movw	r24, r28
     940:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     944:	60 e2       	ldi	r22, 0x20	; 32
     946:	ce 01       	movw	r24, r28
     948:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <_ZN3Epd11SendCommandEh>
     94c:	6f ef       	ldi	r22, 0xFF	; 255
     94e:	ce 01       	movw	r24, r28
     950:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <_ZN3Epd11SendCommandEh>
     954:	ce 01       	movw	r24, r28
     956:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <_ZN3Epd13WaitUntilIdleEv>
     95a:	df 91       	pop	r29
     95c:	cf 91       	pop	r28
     95e:	08 95       	ret

00000960 <_ZN3Epd13SetMemoryAreaEiiii>:
     960:	af 92       	push	r10
     962:	bf 92       	push	r11
     964:	cf 92       	push	r12
     966:	df 92       	push	r13
     968:	ef 92       	push	r14
     96a:	ff 92       	push	r15
     96c:	0f 93       	push	r16
     96e:	1f 93       	push	r17
     970:	cf 93       	push	r28
     972:	df 93       	push	r29
     974:	ec 01       	movw	r28, r24
     976:	6b 01       	movw	r12, r22
     978:	a4 2e       	mov	r10, r20
     97a:	b5 2e       	mov	r11, r21
     97c:	79 01       	movw	r14, r18
     97e:	64 e4       	ldi	r22, 0x44	; 68
     980:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <_ZN3Epd11SendCommandEh>
     984:	b6 01       	movw	r22, r12
     986:	75 95       	asr	r23
     988:	67 95       	ror	r22
     98a:	75 95       	asr	r23
     98c:	67 95       	ror	r22
     98e:	75 95       	asr	r23
     990:	67 95       	ror	r22
     992:	ce 01       	movw	r24, r28
     994:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     998:	b7 01       	movw	r22, r14
     99a:	75 95       	asr	r23
     99c:	67 95       	ror	r22
     99e:	75 95       	asr	r23
     9a0:	67 95       	ror	r22
     9a2:	75 95       	asr	r23
     9a4:	67 95       	ror	r22
     9a6:	ce 01       	movw	r24, r28
     9a8:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     9ac:	65 e4       	ldi	r22, 0x45	; 69
     9ae:	ce 01       	movw	r24, r28
     9b0:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <_ZN3Epd11SendCommandEh>
     9b4:	6a 2d       	mov	r22, r10
     9b6:	ce 01       	movw	r24, r28
     9b8:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     9bc:	6b 2d       	mov	r22, r11
     9be:	ce 01       	movw	r24, r28
     9c0:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     9c4:	60 2f       	mov	r22, r16
     9c6:	ce 01       	movw	r24, r28
     9c8:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     9cc:	61 2f       	mov	r22, r17
     9ce:	ce 01       	movw	r24, r28
     9d0:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     9d4:	df 91       	pop	r29
     9d6:	cf 91       	pop	r28
     9d8:	1f 91       	pop	r17
     9da:	0f 91       	pop	r16
     9dc:	ff 90       	pop	r15
     9de:	ef 90       	pop	r14
     9e0:	df 90       	pop	r13
     9e2:	cf 90       	pop	r12
     9e4:	bf 90       	pop	r11
     9e6:	af 90       	pop	r10
     9e8:	08 95       	ret

000009ea <_ZN3Epd16SetMemoryPointerEii>:
     9ea:	ef 92       	push	r14
     9ec:	ff 92       	push	r15
     9ee:	0f 93       	push	r16
     9f0:	1f 93       	push	r17
     9f2:	cf 93       	push	r28
     9f4:	df 93       	push	r29
     9f6:	ec 01       	movw	r28, r24
     9f8:	8b 01       	movw	r16, r22
     9fa:	e4 2e       	mov	r14, r20
     9fc:	f5 2e       	mov	r15, r21
     9fe:	6e e4       	ldi	r22, 0x4E	; 78
     a00:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <_ZN3Epd11SendCommandEh>
     a04:	b8 01       	movw	r22, r16
     a06:	75 95       	asr	r23
     a08:	67 95       	ror	r22
     a0a:	75 95       	asr	r23
     a0c:	67 95       	ror	r22
     a0e:	75 95       	asr	r23
     a10:	67 95       	ror	r22
     a12:	ce 01       	movw	r24, r28
     a14:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     a18:	6f e4       	ldi	r22, 0x4F	; 79
     a1a:	ce 01       	movw	r24, r28
     a1c:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <_ZN3Epd11SendCommandEh>
     a20:	6e 2d       	mov	r22, r14
     a22:	ce 01       	movw	r24, r28
     a24:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     a28:	6f 2d       	mov	r22, r15
     a2a:	ce 01       	movw	r24, r28
     a2c:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     a30:	ce 01       	movw	r24, r28
     a32:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <_ZN3Epd13WaitUntilIdleEv>
     a36:	df 91       	pop	r29
     a38:	cf 91       	pop	r28
     a3a:	1f 91       	pop	r17
     a3c:	0f 91       	pop	r16
     a3e:	ff 90       	pop	r15
     a40:	ef 90       	pop	r14
     a42:	08 95       	ret

00000a44 <_ZN3Epd14SetFrameMemoryEPKhiiii>:
     a44:	2f 92       	push	r2
     a46:	3f 92       	push	r3
     a48:	4f 92       	push	r4
     a4a:	5f 92       	push	r5
     a4c:	6f 92       	push	r6
     a4e:	7f 92       	push	r7
     a50:	8f 92       	push	r8
     a52:	9f 92       	push	r9
     a54:	af 92       	push	r10
     a56:	bf 92       	push	r11
     a58:	cf 92       	push	r12
     a5a:	df 92       	push	r13
     a5c:	ef 92       	push	r14
     a5e:	ff 92       	push	r15
     a60:	0f 93       	push	r16
     a62:	1f 93       	push	r17
     a64:	cf 93       	push	r28
     a66:	df 93       	push	r29
     a68:	cd b7       	in	r28, 0x3d	; 61
     a6a:	de b7       	in	r29, 0x3e	; 62
     a6c:	28 97       	sbiw	r28, 0x08	; 8
     a6e:	0f b6       	in	r0, 0x3f	; 63
     a70:	f8 94       	cli
     a72:	de bf       	out	0x3e, r29	; 62
     a74:	0f be       	out	0x3f, r0	; 63
     a76:	cd bf       	out	0x3d, r28	; 61
     a78:	1c 01       	movw	r2, r24
     a7a:	61 15       	cp	r22, r1
     a7c:	71 05       	cpc	r23, r1
     a7e:	09 f4       	brne	.+2      	; 0xa82 <_ZN3Epd14SetFrameMemoryEPKhiiii+0x3e>
     a80:	a3 c0       	rjmp	.+326    	; 0xbc8 <_ZN3Epd14SetFrameMemoryEPKhiiii+0x184>
     a82:	55 23       	and	r21, r21
     a84:	0c f4       	brge	.+2      	; 0xa88 <_ZN3Epd14SetFrameMemoryEPKhiiii+0x44>
     a86:	a0 c0       	rjmp	.+320    	; 0xbc8 <_ZN3Epd14SetFrameMemoryEPKhiiii+0x184>
     a88:	11 23       	and	r17, r17
     a8a:	0c f4       	brge	.+2      	; 0xa8e <_ZN3Epd14SetFrameMemoryEPKhiiii+0x4a>
     a8c:	9d c0       	rjmp	.+314    	; 0xbc8 <_ZN3Epd14SetFrameMemoryEPKhiiii+0x184>
     a8e:	33 23       	and	r19, r19
     a90:	0c f4       	brge	.+2      	; 0xa94 <_ZN3Epd14SetFrameMemoryEPKhiiii+0x50>
     a92:	9a c0       	rjmp	.+308    	; 0xbc8 <_ZN3Epd14SetFrameMemoryEPKhiiii+0x184>
     a94:	ff 20       	and	r15, r15
     a96:	0c f4       	brge	.+2      	; 0xa9a <_ZN3Epd14SetFrameMemoryEPKhiiii+0x56>
     a98:	97 c0       	rjmp	.+302    	; 0xbc8 <_ZN3Epd14SetFrameMemoryEPKhiiii+0x184>
     a9a:	6a 01       	movw	r12, r20
     a9c:	88 ef       	ldi	r24, 0xF8	; 248
     a9e:	c8 22       	and	r12, r24
     aa0:	dd 24       	eor	r13, r13
     aa2:	28 01       	movw	r4, r16
     aa4:	98 ef       	ldi	r25, 0xF8	; 248
     aa6:	49 22       	and	r4, r25
     aa8:	55 24       	eor	r5, r5
     aaa:	a6 01       	movw	r20, r12
     aac:	44 0d       	add	r20, r4
     aae:	55 1d       	adc	r21, r5
     ab0:	4a 01       	movw	r8, r20
     ab2:	05 2e       	mov	r0, r21
     ab4:	00 0c       	add	r0, r0
     ab6:	aa 08       	sbc	r10, r10
     ab8:	bb 08       	sbc	r11, r11
     aba:	d1 01       	movw	r26, r2
     abc:	8d 91       	ld	r24, X+
     abe:	9d 91       	ld	r25, X+
     ac0:	0d 90       	ld	r0, X+
     ac2:	bc 91       	ld	r27, X
     ac4:	a0 2d       	mov	r26, r0
     ac6:	8d 83       	std	Y+5, r24	; 0x05
     ac8:	9e 83       	std	Y+6, r25	; 0x06
     aca:	af 83       	std	Y+7, r26	; 0x07
     acc:	b8 87       	std	Y+8, r27	; 0x08
     ace:	88 16       	cp	r8, r24
     ad0:	99 06       	cpc	r9, r25
     ad2:	aa 06       	cpc	r10, r26
     ad4:	bb 06       	cpc	r11, r27
     ad6:	28 f0       	brcs	.+10     	; 0xae2 <_ZN3Epd14SetFrameMemoryEPKhiiii+0x9e>
     ad8:	5c 01       	movw	r10, r24
     ada:	b1 e0       	ldi	r27, 0x01	; 1
     adc:	ab 1a       	sub	r10, r27
     ade:	b1 08       	sbc	r11, r1
     ae0:	04 c0       	rjmp	.+8      	; 0xaea <_ZN3Epd14SetFrameMemoryEPKhiiii+0xa6>
     ae2:	5a 01       	movw	r10, r20
     ae4:	e1 e0       	ldi	r30, 0x01	; 1
     ae6:	ae 1a       	sub	r10, r30
     ae8:	b1 08       	sbc	r11, r1
     aea:	a9 01       	movw	r20, r18
     aec:	4e 0d       	add	r20, r14
     aee:	5f 1d       	adc	r21, r15
     af0:	7a 01       	movw	r14, r20
     af2:	05 2e       	mov	r0, r21
     af4:	00 0c       	add	r0, r0
     af6:	00 0b       	sbc	r16, r16
     af8:	11 0b       	sbc	r17, r17
     afa:	d1 01       	movw	r26, r2
     afc:	14 96       	adiw	r26, 0x04	; 4
     afe:	6d 90       	ld	r6, X+
     b00:	7d 90       	ld	r7, X+
     b02:	8d 90       	ld	r8, X+
     b04:	9c 90       	ld	r9, X
     b06:	17 97       	sbiw	r26, 0x07	; 7
     b08:	e6 14       	cp	r14, r6
     b0a:	f7 04       	cpc	r15, r7
     b0c:	08 05       	cpc	r16, r8
     b0e:	19 05       	cpc	r17, r9
     b10:	28 f0       	brcs	.+10     	; 0xb1c <_ZN3Epd14SetFrameMemoryEPKhiiii+0xd8>
     b12:	43 01       	movw	r8, r6
     b14:	b1 e0       	ldi	r27, 0x01	; 1
     b16:	8b 1a       	sub	r8, r27
     b18:	91 08       	sbc	r9, r1
     b1a:	04 c0       	rjmp	.+8      	; 0xb24 <_ZN3Epd14SetFrameMemoryEPKhiiii+0xe0>
     b1c:	4a 01       	movw	r8, r20
     b1e:	e1 e0       	ldi	r30, 0x01	; 1
     b20:	8e 1a       	sub	r8, r30
     b22:	91 08       	sbc	r9, r1
     b24:	39 01       	movw	r6, r18
     b26:	7b 01       	movw	r14, r22
     b28:	84 01       	movw	r16, r8
     b2a:	95 01       	movw	r18, r10
     b2c:	a3 01       	movw	r20, r6
     b2e:	b6 01       	movw	r22, r12
     b30:	c1 01       	movw	r24, r2
     b32:	0e 94 b0 04 	call	0x960	; 0x960 <_ZN3Epd13SetMemoryAreaEiiii>
     b36:	a3 01       	movw	r20, r6
     b38:	b6 01       	movw	r22, r12
     b3a:	c1 01       	movw	r24, r2
     b3c:	0e 94 f5 04 	call	0x9ea	; 0x9ea <_ZN3Epd16SetMemoryPointerEii>
     b40:	64 e2       	ldi	r22, 0x24	; 36
     b42:	c1 01       	movw	r24, r2
     b44:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <_ZN3Epd11SendCommandEh>
     b48:	1a 82       	std	Y+2, r1	; 0x02
     b4a:	19 82       	std	Y+1, r1	; 0x01
     b4c:	c4 01       	movw	r24, r8
     b4e:	86 19       	sub	r24, r6
     b50:	97 09       	sbc	r25, r7
     b52:	01 96       	adiw	r24, 0x01	; 1
     b54:	29 81       	ldd	r18, Y+1	; 0x01
     b56:	3a 81       	ldd	r19, Y+2	; 0x02
     b58:	28 17       	cp	r18, r24
     b5a:	39 07       	cpc	r19, r25
     b5c:	ac f5       	brge	.+106    	; 0xbc8 <_ZN3Epd14SetFrameMemoryEPKhiiii+0x184>
     b5e:	00 e0       	ldi	r16, 0x00	; 0
     b60:	10 e0       	ldi	r17, 0x00	; 0
     b62:	95 01       	movw	r18, r10
     b64:	2c 19       	sub	r18, r12
     b66:	3d 09       	sbc	r19, r13
     b68:	2f 5f       	subi	r18, 0xFF	; 255
     b6a:	3f 4f       	sbci	r19, 0xFF	; 255
     b6c:	c9 01       	movw	r24, r18
     b6e:	99 23       	and	r25, r25
     b70:	0c f4       	brge	.+2      	; 0xb74 <_ZN3Epd14SetFrameMemoryEPKhiiii+0x130>
     b72:	07 96       	adiw	r24, 0x07	; 7
     b74:	95 95       	asr	r25
     b76:	87 95       	ror	r24
     b78:	95 95       	asr	r25
     b7a:	87 95       	ror	r24
     b7c:	95 95       	asr	r25
     b7e:	87 95       	ror	r24
     b80:	08 17       	cp	r16, r24
     b82:	19 07       	cpc	r17, r25
     b84:	dc f4       	brge	.+54     	; 0xbbc <_ZN3Epd14SetFrameMemoryEPKhiiii+0x178>
     b86:	c2 01       	movw	r24, r4
     b88:	95 95       	asr	r25
     b8a:	87 95       	ror	r24
     b8c:	95 95       	asr	r25
     b8e:	87 95       	ror	r24
     b90:	95 95       	asr	r25
     b92:	87 95       	ror	r24
     b94:	a9 81       	ldd	r26, Y+1	; 0x01
     b96:	ba 81       	ldd	r27, Y+2	; 0x02
     b98:	a8 9f       	mul	r26, r24
     b9a:	f0 01       	movw	r30, r0
     b9c:	a9 9f       	mul	r26, r25
     b9e:	f0 0d       	add	r31, r0
     ba0:	b8 9f       	mul	r27, r24
     ba2:	f0 0d       	add	r31, r0
     ba4:	11 24       	eor	r1, r1
     ba6:	e0 0f       	add	r30, r16
     ba8:	f1 1f       	adc	r31, r17
     baa:	ee 0d       	add	r30, r14
     bac:	ff 1d       	adc	r31, r15
     bae:	60 81       	ld	r22, Z
     bb0:	c1 01       	movw	r24, r2
     bb2:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
     bb6:	0f 5f       	subi	r16, 0xFF	; 255
     bb8:	1f 4f       	sbci	r17, 0xFF	; 255
     bba:	d3 cf       	rjmp	.-90     	; 0xb62 <_ZN3Epd14SetFrameMemoryEPKhiiii+0x11e>
     bbc:	e9 81       	ldd	r30, Y+1	; 0x01
     bbe:	fa 81       	ldd	r31, Y+2	; 0x02
     bc0:	31 96       	adiw	r30, 0x01	; 1
     bc2:	fa 83       	std	Y+2, r31	; 0x02
     bc4:	e9 83       	std	Y+1, r30	; 0x01
     bc6:	c2 cf       	rjmp	.-124    	; 0xb4c <_ZN3Epd14SetFrameMemoryEPKhiiii+0x108>
     bc8:	28 96       	adiw	r28, 0x08	; 8
     bca:	0f b6       	in	r0, 0x3f	; 63
     bcc:	f8 94       	cli
     bce:	de bf       	out	0x3e, r29	; 62
     bd0:	0f be       	out	0x3f, r0	; 63
     bd2:	cd bf       	out	0x3d, r28	; 61
     bd4:	df 91       	pop	r29
     bd6:	cf 91       	pop	r28
     bd8:	1f 91       	pop	r17
     bda:	0f 91       	pop	r16
     bdc:	ff 90       	pop	r15
     bde:	ef 90       	pop	r14
     be0:	df 90       	pop	r13
     be2:	cf 90       	pop	r12
     be4:	bf 90       	pop	r11
     be6:	af 90       	pop	r10
     be8:	9f 90       	pop	r9
     bea:	8f 90       	pop	r8
     bec:	7f 90       	pop	r7
     bee:	6f 90       	pop	r6
     bf0:	5f 90       	pop	r5
     bf2:	4f 90       	pop	r4
     bf4:	3f 90       	pop	r3
     bf6:	2f 90       	pop	r2
     bf8:	08 95       	ret

00000bfa <_ZN3Epd16ClearFrameMemoryEh>:

/**
 *  @brief: clear the frame memory with the specified color.
 *          this won't update the display.
 */
void Epd::ClearFrameMemory(unsigned char color) {
     bfa:	8f 92       	push	r8
     bfc:	9f 92       	push	r9
     bfe:	af 92       	push	r10
     c00:	bf 92       	push	r11
     c02:	ff 92       	push	r15
     c04:	0f 93       	push	r16
     c06:	1f 93       	push	r17
     c08:	cf 93       	push	r28
     c0a:	df 93       	push	r29
     c0c:	ec 01       	movw	r28, r24
     c0e:	f6 2e       	mov	r15, r22
    SetMemoryArea(0, 0, this->width - 1, this->height - 1);
     c10:	0c 81       	ldd	r16, Y+4	; 0x04
     c12:	1d 81       	ldd	r17, Y+5	; 0x05
     c14:	2e 81       	ldd	r18, Y+6	; 0x06
     c16:	3f 81       	ldd	r19, Y+7	; 0x07
     c18:	01 50       	subi	r16, 0x01	; 1
     c1a:	11 09       	sbc	r17, r1
     c1c:	88 81       	ld	r24, Y
     c1e:	99 81       	ldd	r25, Y+1	; 0x01
     c20:	aa 81       	ldd	r26, Y+2	; 0x02
     c22:	bb 81       	ldd	r27, Y+3	; 0x03
     c24:	9c 01       	movw	r18, r24
     c26:	21 50       	subi	r18, 0x01	; 1
     c28:	31 09       	sbc	r19, r1
     c2a:	40 e0       	ldi	r20, 0x00	; 0
     c2c:	50 e0       	ldi	r21, 0x00	; 0
     c2e:	60 e0       	ldi	r22, 0x00	; 0
     c30:	70 e0       	ldi	r23, 0x00	; 0
     c32:	ce 01       	movw	r24, r28
     c34:	0e 94 b0 04 	call	0x960	; 0x960 <_ZN3Epd13SetMemoryAreaEiiii>
    SetMemoryPointer(0, 0);
     c38:	40 e0       	ldi	r20, 0x00	; 0
     c3a:	50 e0       	ldi	r21, 0x00	; 0
     c3c:	60 e0       	ldi	r22, 0x00	; 0
     c3e:	70 e0       	ldi	r23, 0x00	; 0
     c40:	ce 01       	movw	r24, r28
     c42:	0e 94 f5 04 	call	0x9ea	; 0x9ea <_ZN3Epd16SetMemoryPointerEii>
    SendCommand(WRITE_RAM);
     c46:	64 e2       	ldi	r22, 0x24	; 36
     c48:	ce 01       	movw	r24, r28
     c4a:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <_ZN3Epd11SendCommandEh>
    /* send the color data */
    for (int i = 0; i < this->width / 8 * this->height; i++) {
     c4e:	00 e0       	ldi	r16, 0x00	; 0
     c50:	10 e0       	ldi	r17, 0x00	; 0
     c52:	88 81       	ld	r24, Y
     c54:	99 81       	ldd	r25, Y+1	; 0x01
     c56:	aa 81       	ldd	r26, Y+2	; 0x02
     c58:	bb 81       	ldd	r27, Y+3	; 0x03
     c5a:	9c 01       	movw	r18, r24
     c5c:	ad 01       	movw	r20, r26
     c5e:	68 94       	set
     c60:	12 f8       	bld	r1, 2
     c62:	56 95       	lsr	r21
     c64:	47 95       	ror	r20
     c66:	37 95       	ror	r19
     c68:	27 95       	ror	r18
     c6a:	16 94       	lsr	r1
     c6c:	d1 f7       	brne	.-12     	; 0xc62 <_ZN3Epd16ClearFrameMemoryEh+0x68>
     c6e:	6c 81       	ldd	r22, Y+4	; 0x04
     c70:	7d 81       	ldd	r23, Y+5	; 0x05
     c72:	8e 81       	ldd	r24, Y+6	; 0x06
     c74:	9f 81       	ldd	r25, Y+7	; 0x07
     c76:	0e 94 9f 0c 	call	0x193e	; 0x193e <__mulsi3>
     c7a:	48 01       	movw	r8, r16
     c7c:	01 2e       	mov	r0, r17
     c7e:	00 0c       	add	r0, r0
     c80:	aa 08       	sbc	r10, r10
     c82:	bb 08       	sbc	r11, r11
     c84:	86 16       	cp	r8, r22
     c86:	97 06       	cpc	r9, r23
     c88:	a8 06       	cpc	r10, r24
     c8a:	b9 06       	cpc	r11, r25
     c8c:	38 f4       	brcc	.+14     	; 0xc9c <_ZN3Epd16ClearFrameMemoryEh+0xa2>
        SendData(color);
     c8e:	6f 2d       	mov	r22, r15
     c90:	ce 01       	movw	r24, r28
     c92:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <_ZN3Epd8SendDataEh>
void Epd::ClearFrameMemory(unsigned char color) {
    SetMemoryArea(0, 0, this->width - 1, this->height - 1);
    SetMemoryPointer(0, 0);
    SendCommand(WRITE_RAM);
    /* send the color data */
    for (int i = 0; i < this->width / 8 * this->height; i++) {
     c96:	0f 5f       	subi	r16, 0xFF	; 255
     c98:	1f 4f       	sbci	r17, 0xFF	; 255
     c9a:	db cf       	rjmp	.-74     	; 0xc52 <_ZN3Epd16ClearFrameMemoryEh+0x58>
        SendData(color);
    }
}
     c9c:	df 91       	pop	r29
     c9e:	cf 91       	pop	r28
     ca0:	1f 91       	pop	r17
     ca2:	0f 91       	pop	r16
     ca4:	ff 90       	pop	r15
     ca6:	bf 90       	pop	r11
     ca8:	af 90       	pop	r10
     caa:	9f 90       	pop	r9
     cac:	8f 90       	pop	r8
     cae:	08 95       	ret

00000cb0 <_ZN5EpdIfC1Ev>:
 */

#include "epdif.h"
#include "spi.h"

EpdIf::EpdIf() {
     cb0:	0e 94 8d 03 	call	0x71a	; 0x71a <_ZN3SPIC1Ev>
     cb4:	08 95       	ret

00000cb6 <_ZN5EpdIfD1Ev>:
};

EpdIf::~EpdIf() {
     cb6:	0e 94 8e 03 	call	0x71c	; 0x71c <_ZN3SPID1Ev>
     cba:	08 95       	ret

00000cbc <_ZN5EpdIf12DigitalWriteEhh>:
};

void EpdIf::DigitalWrite(uint8_t pin, uint8_t value) {
    EPD_PORT &= ~(1 << pin);
     cbc:	95 b1       	in	r25, 0x05	; 5
     cbe:	21 e0       	ldi	r18, 0x01	; 1
     cc0:	30 e0       	ldi	r19, 0x00	; 0
     cc2:	08 2e       	mov	r0, r24
     cc4:	02 c0       	rjmp	.+4      	; 0xcca <_ZN5EpdIf12DigitalWriteEhh+0xe>
     cc6:	22 0f       	add	r18, r18
     cc8:	33 1f       	adc	r19, r19
     cca:	0a 94       	dec	r0
     ccc:	e2 f7       	brpl	.-8      	; 0xcc6 <_ZN5EpdIf12DigitalWriteEhh+0xa>
     cce:	20 95       	com	r18
     cd0:	29 23       	and	r18, r25
     cd2:	25 b9       	out	0x05, r18	; 5
	EPD_PORT |= (value << pin);
     cd4:	95 b1       	in	r25, 0x05	; 5
     cd6:	70 e0       	ldi	r23, 0x00	; 0
     cd8:	02 c0       	rjmp	.+4      	; 0xcde <_ZN5EpdIf12DigitalWriteEhh+0x22>
     cda:	66 0f       	add	r22, r22
     cdc:	77 1f       	adc	r23, r23
     cde:	8a 95       	dec	r24
     ce0:	e2 f7       	brpl	.-8      	; 0xcda <_ZN5EpdIf12DigitalWriteEhh+0x1e>
     ce2:	69 2b       	or	r22, r25
     ce4:	65 b9       	out	0x05, r22	; 5
     ce6:	08 95       	ret

00000ce8 <_ZN5EpdIf11DigitalReadEh>:
}

uint8_t EpdIf::DigitalRead(uint8_t pin) {
    return (EPD_PINS & (1 << pin)) >> pin;
     ce8:	93 b1       	in	r25, 0x03	; 3
     cea:	21 e0       	ldi	r18, 0x01	; 1
     cec:	30 e0       	ldi	r19, 0x00	; 0
     cee:	a9 01       	movw	r20, r18
     cf0:	08 2e       	mov	r0, r24
     cf2:	02 c0       	rjmp	.+4      	; 0xcf8 <_ZN5EpdIf11DigitalReadEh+0x10>
     cf4:	44 0f       	add	r20, r20
     cf6:	55 1f       	adc	r21, r21
     cf8:	0a 94       	dec	r0
     cfa:	e2 f7       	brpl	.-8      	; 0xcf4 <_ZN5EpdIf11DigitalReadEh+0xc>
     cfc:	29 2f       	mov	r18, r25
     cfe:	30 e0       	ldi	r19, 0x00	; 0
     d00:	24 23       	and	r18, r20
     d02:	35 23       	and	r19, r21
     d04:	a9 01       	movw	r20, r18
     d06:	02 c0       	rjmp	.+4      	; 0xd0c <_ZN5EpdIf11DigitalReadEh+0x24>
     d08:	55 95       	asr	r21
     d0a:	47 95       	ror	r20
     d0c:	8a 95       	dec	r24
     d0e:	e2 f7       	brpl	.-8      	; 0xd08 <_ZN5EpdIf11DigitalReadEh+0x20>
     d10:	ca 01       	movw	r24, r20
}
     d12:	08 95       	ret

00000d14 <_ZN5EpdIf7DelayMsEj>:

void EpdIf::DelayMs(uint16_t delaytime) {
     d14:	8f 92       	push	r8
     d16:	9f 92       	push	r9
     d18:	af 92       	push	r10
     d1a:	bf 92       	push	r11
     d1c:	cf 92       	push	r12
     d1e:	df 92       	push	r13
     d20:	ef 92       	push	r14
     d22:	ff 92       	push	r15
    _delay_ms(delaytime);
     d24:	bc 01       	movw	r22, r24
     d26:	80 e0       	ldi	r24, 0x00	; 0
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	0e 94 7b 0b 	call	0x16f6	; 0x16f6 <__floatunsisf>
     d2e:	4b 01       	movw	r8, r22
     d30:	5c 01       	movw	r10, r24

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     d32:	20 e0       	ldi	r18, 0x00	; 0
     d34:	30 e0       	ldi	r19, 0x00	; 0
     d36:	4a ef       	ldi	r20, 0xFA	; 250
     d38:	54 e4       	ldi	r21, 0x44	; 68
     d3a:	0e 94 0a 0c 	call	0x1814	; 0x1814 <__mulsf3>
     d3e:	6b 01       	movw	r12, r22
     d40:	7c 01       	movw	r14, r24
	if (__tmp < 1.0)
     d42:	20 e0       	ldi	r18, 0x00	; 0
     d44:	30 e0       	ldi	r19, 0x00	; 0
     d46:	40 e8       	ldi	r20, 0x80	; 128
     d48:	5f e3       	ldi	r21, 0x3F	; 63
     d4a:	0e 94 47 0b 	call	0x168e	; 0x168e <__cmpsf2>
     d4e:	88 23       	and	r24, r24
     d50:	1c f1       	brlt	.+70     	; 0xd98 <_ZN5EpdIf7DelayMsEj+0x84>
		__ticks = 1;
	else if (__tmp > 65535)
     d52:	20 e0       	ldi	r18, 0x00	; 0
     d54:	3f ef       	ldi	r19, 0xFF	; 255
     d56:	4f e7       	ldi	r20, 0x7F	; 127
     d58:	57 e4       	ldi	r21, 0x47	; 71
     d5a:	c7 01       	movw	r24, r14
     d5c:	b6 01       	movw	r22, r12
     d5e:	0e 94 05 0c 	call	0x180a	; 0x180a <__gesf2>
     d62:	18 16       	cp	r1, r24
     d64:	a4 f4       	brge	.+40     	; 0xd8e <_ZN5EpdIf7DelayMsEj+0x7a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d66:	20 e0       	ldi	r18, 0x00	; 0
     d68:	30 e0       	ldi	r19, 0x00	; 0
     d6a:	40 e2       	ldi	r20, 0x20	; 32
     d6c:	51 e4       	ldi	r21, 0x41	; 65
     d6e:	c5 01       	movw	r24, r10
     d70:	b4 01       	movw	r22, r8
     d72:	0e 94 0a 0c 	call	0x1814	; 0x1814 <__mulsf3>
     d76:	0e 94 4c 0b 	call	0x1698	; 0x1698 <__fixunssfsi>
		while(__ticks)
     d7a:	61 15       	cp	r22, r1
     d7c:	71 05       	cpc	r23, r1
     d7e:	89 f0       	breq	.+34     	; 0xda2 <_ZN5EpdIf7DelayMsEj+0x8e>
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
     d80:	88 ec       	ldi	r24, 0xC8	; 200
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	01 97       	sbiw	r24, 0x01	; 1
     d86:	f1 f7       	brne	.-4      	; 0xd84 <_ZN5EpdIf7DelayMsEj+0x70>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d88:	61 50       	subi	r22, 0x01	; 1
     d8a:	71 09       	sbc	r23, r1
     d8c:	f6 cf       	rjmp	.-20     	; 0xd7a <_ZN5EpdIf7DelayMsEj+0x66>
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d8e:	c7 01       	movw	r24, r14
     d90:	b6 01       	movw	r22, r12
     d92:	0e 94 4c 0b 	call	0x1698	; 0x1698 <__fixunssfsi>
     d96:	02 c0       	rjmp	.+4      	; 0xd9c <_ZN5EpdIf7DelayMsEj+0x88>

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
	if (__tmp < 1.0)
		__ticks = 1;
     d98:	61 e0       	ldi	r22, 0x01	; 1
     d9a:	70 e0       	ldi	r23, 0x00	; 0
     d9c:	cb 01       	movw	r24, r22
     d9e:	01 97       	sbiw	r24, 0x01	; 1
     da0:	f1 f7       	brne	.-4      	; 0xd9e <_ZN5EpdIf7DelayMsEj+0x8a>
}
     da2:	ff 90       	pop	r15
     da4:	ef 90       	pop	r14
     da6:	df 90       	pop	r13
     da8:	cf 90       	pop	r12
     daa:	bf 90       	pop	r11
     dac:	af 90       	pop	r10
     dae:	9f 90       	pop	r9
     db0:	8f 90       	pop	r8
     db2:	08 95       	ret

00000db4 <_ZN5EpdIf11SpiTransferEh>:

void EpdIf::SpiTransfer(uint8_t data) {
    SPI_PORT &= ~(1 << EPD_CS_PIN); //clear chip select and data/command bits;
     db4:	95 b1       	in	r25, 0x05	; 5
     db6:	9d 7f       	andi	r25, 0xFD	; 253
     db8:	95 b9       	out	0x05, r25	; 5
    send_byte(data);
     dba:	0e 94 a0 03 	call	0x740	; 0x740 <_ZN3SPI9send_byteEh>
	SPI_PORT |= (1 << EPD_CS_PIN); // set the chip select bit high.
     dbe:	85 b1       	in	r24, 0x05	; 5
     dc0:	82 60       	ori	r24, 0x02	; 2
     dc2:	85 b9       	out	0x05, r24	; 5
     dc4:	08 95       	ret

00000dc6 <_ZN5EpdIf6IfInitEv>:
}

uint8_t EpdIf::IfInit(void) {
    EPD_DDR |= (1 << EPD_CS_PIN | 1 << EPD_DC_PIN | 1 << EPD_RESET_PIN);
     dc6:	84 b1       	in	r24, 0x04	; 4
     dc8:	87 60       	ori	r24, 0x07	; 7
     dca:	84 b9       	out	0x04, r24	; 4
    EPD_DDR &= ~(1 << EPD_BUSY_PIN);
     dcc:	84 b1       	in	r24, 0x04	; 4
     dce:	8f 7b       	andi	r24, 0xBF	; 191
     dd0:	84 b9       	out	0x04, r24	; 4
    EPD_PORT &= ~(1 << EPD_BUSY_PIN);
     dd2:	85 b1       	in	r24, 0x05	; 5
     dd4:	8f 7b       	andi	r24, 0xBF	; 191
     dd6:	85 b9       	out	0x05, r24	; 5
	spi_init();
     dd8:	0e 94 8f 03 	call	0x71e	; 0x71e <_ZN3SPI8spi_initEv>
    
    return 0;
}
     ddc:	80 e0       	ldi	r24, 0x00	; 0
     dde:	08 95       	ret

00000de0 <_ZN5PaintC1EPhii>:
        if (2 * err <= dx) {
            err += dx; 
            y0 += sy;
        }
    }
}
     de0:	fc 01       	movw	r30, r24
     de2:	17 82       	std	Z+7, r1	; 0x07
     de4:	16 82       	std	Z+6, r1	; 0x06
     de6:	71 83       	std	Z+1, r23	; 0x01
     de8:	60 83       	st	Z, r22
     dea:	ca 01       	movw	r24, r20
     dec:	87 70       	andi	r24, 0x07	; 7
     dee:	99 27       	eor	r25, r25
     df0:	89 2b       	or	r24, r25
     df2:	81 f0       	breq	.+32     	; 0xe14 <_ZN5PaintC1EPhii+0x34>
     df4:	ca 01       	movw	r24, r20
     df6:	08 96       	adiw	r24, 0x08	; 8
     df8:	47 70       	andi	r20, 0x07	; 7
     dfa:	50 78       	andi	r21, 0x80	; 128
     dfc:	55 23       	and	r21, r21
     dfe:	34 f4       	brge	.+12     	; 0xe0c <_ZN5PaintC1EPhii+0x2c>
     e00:	41 50       	subi	r20, 0x01	; 1
     e02:	51 09       	sbc	r21, r1
     e04:	48 6f       	ori	r20, 0xF8	; 248
     e06:	5f 6f       	ori	r21, 0xFF	; 255
     e08:	4f 5f       	subi	r20, 0xFF	; 255
     e0a:	5f 4f       	sbci	r21, 0xFF	; 255
     e0c:	bc 01       	movw	r22, r24
     e0e:	64 1b       	sub	r22, r20
     e10:	75 0b       	sbc	r23, r21
     e12:	ab 01       	movw	r20, r22
     e14:	53 83       	std	Z+3, r21	; 0x03
     e16:	42 83       	std	Z+2, r20	; 0x02
     e18:	35 83       	std	Z+5, r19	; 0x05
     e1a:	24 83       	std	Z+4, r18	; 0x04
     e1c:	08 95       	ret

00000e1e <_ZN5PaintD1Ev>:
     e1e:	08 95       	ret

00000e20 <_ZN5Paint17DrawAbsolutePixelEiii>:
     e20:	cf 93       	push	r28
     e22:	df 93       	push	r29
     e24:	77 23       	and	r23, r23
     e26:	0c f4       	brge	.+2      	; 0xe2a <_ZN5Paint17DrawAbsolutePixelEiii+0xa>
     e28:	70 c0       	rjmp	.+224    	; 0xf0a <_ZN5Paint17DrawAbsolutePixelEiii+0xea>
     e2a:	dc 01       	movw	r26, r24
     e2c:	12 96       	adiw	r26, 0x02	; 2
     e2e:	ed 91       	ld	r30, X+
     e30:	fc 91       	ld	r31, X
     e32:	13 97       	sbiw	r26, 0x03	; 3
     e34:	6e 17       	cp	r22, r30
     e36:	7f 07       	cpc	r23, r31
     e38:	0c f0       	brlt	.+2      	; 0xe3c <_ZN5Paint17DrawAbsolutePixelEiii+0x1c>
     e3a:	67 c0       	rjmp	.+206    	; 0xf0a <_ZN5Paint17DrawAbsolutePixelEiii+0xea>
     e3c:	55 23       	and	r21, r21
     e3e:	0c f4       	brge	.+2      	; 0xe42 <_ZN5Paint17DrawAbsolutePixelEiii+0x22>
     e40:	64 c0       	rjmp	.+200    	; 0xf0a <_ZN5Paint17DrawAbsolutePixelEiii+0xea>
     e42:	14 96       	adiw	r26, 0x04	; 4
     e44:	0d 90       	ld	r0, X+
     e46:	bc 91       	ld	r27, X
     e48:	a0 2d       	mov	r26, r0
     e4a:	4a 17       	cp	r20, r26
     e4c:	5b 07       	cpc	r21, r27
     e4e:	0c f0       	brlt	.+2      	; 0xe52 <_ZN5Paint17DrawAbsolutePixelEiii+0x32>
     e50:	5c c0       	rjmp	.+184    	; 0xf0a <_ZN5Paint17DrawAbsolutePixelEiii+0xea>
     e52:	23 2b       	or	r18, r19
     e54:	69 f1       	breq	.+90     	; 0xeb0 <_ZN5Paint17DrawAbsolutePixelEiii+0x90>
     e56:	ec 01       	movw	r28, r24
     e58:	28 81       	ld	r18, Y
     e5a:	39 81       	ldd	r19, Y+1	; 0x01
     e5c:	e4 9f       	mul	r30, r20
     e5e:	c0 01       	movw	r24, r0
     e60:	e5 9f       	mul	r30, r21
     e62:	90 0d       	add	r25, r0
     e64:	f4 9f       	mul	r31, r20
     e66:	90 0d       	add	r25, r0
     e68:	11 24       	eor	r1, r1
     e6a:	86 0f       	add	r24, r22
     e6c:	97 1f       	adc	r25, r23
     e6e:	99 23       	and	r25, r25
     e70:	0c f4       	brge	.+2      	; 0xe74 <_ZN5Paint17DrawAbsolutePixelEiii+0x54>
     e72:	07 96       	adiw	r24, 0x07	; 7
     e74:	95 95       	asr	r25
     e76:	87 95       	ror	r24
     e78:	95 95       	asr	r25
     e7a:	87 95       	ror	r24
     e7c:	95 95       	asr	r25
     e7e:	87 95       	ror	r24
     e80:	f9 01       	movw	r30, r18
     e82:	e8 0f       	add	r30, r24
     e84:	f9 1f       	adc	r31, r25
     e86:	67 70       	andi	r22, 0x07	; 7
     e88:	70 78       	andi	r23, 0x80	; 128
     e8a:	77 23       	and	r23, r23
     e8c:	34 f4       	brge	.+12     	; 0xe9a <_ZN5Paint17DrawAbsolutePixelEiii+0x7a>
     e8e:	61 50       	subi	r22, 0x01	; 1
     e90:	71 09       	sbc	r23, r1
     e92:	68 6f       	ori	r22, 0xF8	; 248
     e94:	7f 6f       	ori	r23, 0xFF	; 255
     e96:	6f 5f       	subi	r22, 0xFF	; 255
     e98:	7f 4f       	sbci	r23, 0xFF	; 255
     e9a:	80 e8       	ldi	r24, 0x80	; 128
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	02 c0       	rjmp	.+4      	; 0xea4 <_ZN5Paint17DrawAbsolutePixelEiii+0x84>
     ea0:	95 95       	asr	r25
     ea2:	87 95       	ror	r24
     ea4:	6a 95       	dec	r22
     ea6:	e2 f7       	brpl	.-8      	; 0xea0 <_ZN5Paint17DrawAbsolutePixelEiii+0x80>
     ea8:	90 81       	ld	r25, Z
     eaa:	89 2b       	or	r24, r25
     eac:	80 83       	st	Z, r24
     eae:	2d c0       	rjmp	.+90     	; 0xf0a <_ZN5Paint17DrawAbsolutePixelEiii+0xea>
     eb0:	dc 01       	movw	r26, r24
     eb2:	2d 91       	ld	r18, X+
     eb4:	3c 91       	ld	r19, X
     eb6:	e4 9f       	mul	r30, r20
     eb8:	c0 01       	movw	r24, r0
     eba:	e5 9f       	mul	r30, r21
     ebc:	90 0d       	add	r25, r0
     ebe:	f4 9f       	mul	r31, r20
     ec0:	90 0d       	add	r25, r0
     ec2:	11 24       	eor	r1, r1
     ec4:	86 0f       	add	r24, r22
     ec6:	97 1f       	adc	r25, r23
     ec8:	99 23       	and	r25, r25
     eca:	0c f4       	brge	.+2      	; 0xece <_ZN5Paint17DrawAbsolutePixelEiii+0xae>
     ecc:	07 96       	adiw	r24, 0x07	; 7
     ece:	95 95       	asr	r25
     ed0:	87 95       	ror	r24
     ed2:	95 95       	asr	r25
     ed4:	87 95       	ror	r24
     ed6:	95 95       	asr	r25
     ed8:	87 95       	ror	r24
     eda:	f9 01       	movw	r30, r18
     edc:	e8 0f       	add	r30, r24
     ede:	f9 1f       	adc	r31, r25
     ee0:	67 70       	andi	r22, 0x07	; 7
     ee2:	70 78       	andi	r23, 0x80	; 128
     ee4:	77 23       	and	r23, r23
     ee6:	34 f4       	brge	.+12     	; 0xef4 <_ZN5Paint17DrawAbsolutePixelEiii+0xd4>
     ee8:	61 50       	subi	r22, 0x01	; 1
     eea:	71 09       	sbc	r23, r1
     eec:	68 6f       	ori	r22, 0xF8	; 248
     eee:	7f 6f       	ori	r23, 0xFF	; 255
     ef0:	6f 5f       	subi	r22, 0xFF	; 255
     ef2:	7f 4f       	sbci	r23, 0xFF	; 255
     ef4:	80 e8       	ldi	r24, 0x80	; 128
     ef6:	90 e0       	ldi	r25, 0x00	; 0
     ef8:	02 c0       	rjmp	.+4      	; 0xefe <_ZN5Paint17DrawAbsolutePixelEiii+0xde>
     efa:	95 95       	asr	r25
     efc:	87 95       	ror	r24
     efe:	6a 95       	dec	r22
     f00:	e2 f7       	brpl	.-8      	; 0xefa <_ZN5Paint17DrawAbsolutePixelEiii+0xda>
     f02:	80 95       	com	r24
     f04:	90 81       	ld	r25, Z
     f06:	89 23       	and	r24, r25
     f08:	80 83       	st	Z, r24
     f0a:	df 91       	pop	r29
     f0c:	cf 91       	pop	r28
     f0e:	08 95       	ret

00000f10 <_ZN5Paint5ClearEi>:
     f10:	cf 92       	push	r12
     f12:	df 92       	push	r13
     f14:	ef 92       	push	r14
     f16:	ff 92       	push	r15
     f18:	0f 93       	push	r16
     f1a:	1f 93       	push	r17
     f1c:	cf 93       	push	r28
     f1e:	df 93       	push	r29
     f20:	8c 01       	movw	r16, r24
     f22:	6b 01       	movw	r12, r22
     f24:	e1 2c       	mov	r14, r1
     f26:	f1 2c       	mov	r15, r1
     f28:	f8 01       	movw	r30, r16
     f2a:	82 81       	ldd	r24, Z+2	; 0x02
     f2c:	93 81       	ldd	r25, Z+3	; 0x03
     f2e:	e8 16       	cp	r14, r24
     f30:	f9 06       	cpc	r15, r25
     f32:	a4 f4       	brge	.+40     	; 0xf5c <_ZN5Paint5ClearEi+0x4c>
     f34:	c0 e0       	ldi	r28, 0x00	; 0
     f36:	d0 e0       	ldi	r29, 0x00	; 0
     f38:	f8 01       	movw	r30, r16
     f3a:	84 81       	ldd	r24, Z+4	; 0x04
     f3c:	95 81       	ldd	r25, Z+5	; 0x05
     f3e:	c8 17       	cp	r28, r24
     f40:	d9 07       	cpc	r29, r25
     f42:	44 f4       	brge	.+16     	; 0xf54 <_ZN5Paint5ClearEi+0x44>
     f44:	96 01       	movw	r18, r12
     f46:	ae 01       	movw	r20, r28
     f48:	b7 01       	movw	r22, r14
     f4a:	c8 01       	movw	r24, r16
     f4c:	0e 94 10 07 	call	0xe20	; 0xe20 <_ZN5Paint17DrawAbsolutePixelEiii>
     f50:	21 96       	adiw	r28, 0x01	; 1
     f52:	f2 cf       	rjmp	.-28     	; 0xf38 <_ZN5Paint5ClearEi+0x28>
     f54:	ff ef       	ldi	r31, 0xFF	; 255
     f56:	ef 1a       	sub	r14, r31
     f58:	ff 0a       	sbc	r15, r31
     f5a:	e6 cf       	rjmp	.-52     	; 0xf28 <_ZN5Paint5ClearEi+0x18>
     f5c:	df 91       	pop	r29
     f5e:	cf 91       	pop	r28
     f60:	1f 91       	pop	r17
     f62:	0f 91       	pop	r16
     f64:	ff 90       	pop	r15
     f66:	ef 90       	pop	r14
     f68:	df 90       	pop	r13
     f6a:	cf 90       	pop	r12
     f6c:	08 95       	ret

00000f6e <_ZN5Paint8GetImageEv>:
     f6e:	fc 01       	movw	r30, r24
     f70:	80 81       	ld	r24, Z
     f72:	91 81       	ldd	r25, Z+1	; 0x01
     f74:	08 95       	ret

00000f76 <_ZN5Paint8GetWidthEv>:
     f76:	fc 01       	movw	r30, r24
     f78:	82 81       	ldd	r24, Z+2	; 0x02
     f7a:	93 81       	ldd	r25, Z+3	; 0x03
     f7c:	08 95       	ret

00000f7e <_ZN5Paint8SetWidthEi>:
     f7e:	9b 01       	movw	r18, r22
     f80:	27 70       	andi	r18, 0x07	; 7
     f82:	33 27       	eor	r19, r19
     f84:	23 2b       	or	r18, r19
     f86:	89 f0       	breq	.+34     	; 0xfaa <_ZN5Paint8SetWidthEi+0x2c>
     f88:	9b 01       	movw	r18, r22
     f8a:	28 5f       	subi	r18, 0xF8	; 248
     f8c:	3f 4f       	sbci	r19, 0xFF	; 255
     f8e:	67 70       	andi	r22, 0x07	; 7
     f90:	70 78       	andi	r23, 0x80	; 128
     f92:	77 23       	and	r23, r23
     f94:	34 f4       	brge	.+12     	; 0xfa2 <_ZN5Paint8SetWidthEi+0x24>
     f96:	61 50       	subi	r22, 0x01	; 1
     f98:	71 09       	sbc	r23, r1
     f9a:	68 6f       	ori	r22, 0xF8	; 248
     f9c:	7f 6f       	ori	r23, 0xFF	; 255
     f9e:	6f 5f       	subi	r22, 0xFF	; 255
     fa0:	7f 4f       	sbci	r23, 0xFF	; 255
     fa2:	a9 01       	movw	r20, r18
     fa4:	46 1b       	sub	r20, r22
     fa6:	57 0b       	sbc	r21, r23
     fa8:	ba 01       	movw	r22, r20
     faa:	fc 01       	movw	r30, r24
     fac:	73 83       	std	Z+3, r23	; 0x03
     fae:	62 83       	std	Z+2, r22	; 0x02
     fb0:	08 95       	ret

00000fb2 <_ZN5Paint9GetHeightEv>:
     fb2:	fc 01       	movw	r30, r24
     fb4:	84 81       	ldd	r24, Z+4	; 0x04
     fb6:	95 81       	ldd	r25, Z+5	; 0x05
     fb8:	08 95       	ret

00000fba <_ZN5Paint9SetHeightEi>:
     fba:	fc 01       	movw	r30, r24
     fbc:	75 83       	std	Z+5, r23	; 0x05
     fbe:	64 83       	std	Z+4, r22	; 0x04
     fc0:	08 95       	ret

00000fc2 <_ZN5Paint9SetRotateEi>:
     fc2:	fc 01       	movw	r30, r24
     fc4:	77 83       	std	Z+7, r23	; 0x07
     fc6:	66 83       	std	Z+6, r22	; 0x06
     fc8:	08 95       	ret

00000fca <_ZN5Paint9DrawPixelEiii>:
     fca:	cf 93       	push	r28
     fcc:	df 93       	push	r29
     fce:	fa 01       	movw	r30, r20
     fd0:	dc 01       	movw	r26, r24
     fd2:	16 96       	adiw	r26, 0x06	; 6
     fd4:	4d 91       	ld	r20, X+
     fd6:	5c 91       	ld	r21, X
     fd8:	17 97       	sbiw	r26, 0x07	; 7
     fda:	41 15       	cp	r20, r1
     fdc:	51 05       	cpc	r21, r1
     fde:	d1 f4       	brne	.+52     	; 0x1014 <_ZN5Paint9DrawPixelEiii+0x4a>
     fe0:	77 23       	and	r23, r23
     fe2:	0c f4       	brge	.+2      	; 0xfe6 <_ZN5Paint9DrawPixelEiii+0x1c>
     fe4:	6a c0       	rjmp	.+212    	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
     fe6:	12 96       	adiw	r26, 0x02	; 2
     fe8:	4d 91       	ld	r20, X+
     fea:	5c 91       	ld	r21, X
     fec:	13 97       	sbiw	r26, 0x03	; 3
     fee:	64 17       	cp	r22, r20
     ff0:	75 07       	cpc	r23, r21
     ff2:	0c f0       	brlt	.+2      	; 0xff6 <_ZN5Paint9DrawPixelEiii+0x2c>
     ff4:	62 c0       	rjmp	.+196    	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
     ff6:	ff 23       	and	r31, r31
     ff8:	0c f4       	brge	.+2      	; 0xffc <_ZN5Paint9DrawPixelEiii+0x32>
     ffa:	5f c0       	rjmp	.+190    	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
     ffc:	14 96       	adiw	r26, 0x04	; 4
     ffe:	4d 91       	ld	r20, X+
    1000:	5c 91       	ld	r21, X
    1002:	15 97       	sbiw	r26, 0x05	; 5
    1004:	e4 17       	cp	r30, r20
    1006:	f5 07       	cpc	r31, r21
    1008:	0c f0       	brlt	.+2      	; 0x100c <_ZN5Paint9DrawPixelEiii+0x42>
    100a:	57 c0       	rjmp	.+174    	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
    100c:	af 01       	movw	r20, r30
    100e:	0e 94 10 07 	call	0xe20	; 0xe20 <_ZN5Paint17DrawAbsolutePixelEiii>
    1012:	53 c0       	rjmp	.+166    	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
    1014:	41 30       	cpi	r20, 0x01	; 1
    1016:	51 05       	cpc	r21, r1
    1018:	d1 f4       	brne	.+52     	; 0x104e <_ZN5Paint9DrawPixelEiii+0x84>
    101a:	77 23       	and	r23, r23
    101c:	0c f4       	brge	.+2      	; 0x1020 <_ZN5Paint9DrawPixelEiii+0x56>
    101e:	4d c0       	rjmp	.+154    	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
    1020:	ec 01       	movw	r28, r24
    1022:	4c 81       	ldd	r20, Y+4	; 0x04
    1024:	5d 81       	ldd	r21, Y+5	; 0x05
    1026:	64 17       	cp	r22, r20
    1028:	75 07       	cpc	r23, r21
    102a:	0c f0       	brlt	.+2      	; 0x102e <_ZN5Paint9DrawPixelEiii+0x64>
    102c:	46 c0       	rjmp	.+140    	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
    102e:	ff 23       	and	r31, r31
    1030:	0c f4       	brge	.+2      	; 0x1034 <_ZN5Paint9DrawPixelEiii+0x6a>
    1032:	43 c0       	rjmp	.+134    	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
    1034:	4a 81       	ldd	r20, Y+2	; 0x02
    1036:	5b 81       	ldd	r21, Y+3	; 0x03
    1038:	e4 17       	cp	r30, r20
    103a:	f5 07       	cpc	r31, r21
    103c:	f4 f5       	brge	.+124    	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
    103e:	da 01       	movw	r26, r20
    1040:	ae 1b       	sub	r26, r30
    1042:	bf 0b       	sbc	r27, r31
    1044:	ab 01       	movw	r20, r22
    1046:	bd 01       	movw	r22, r26
    1048:	0e 94 10 07 	call	0xe20	; 0xe20 <_ZN5Paint17DrawAbsolutePixelEiii>
    104c:	36 c0       	rjmp	.+108    	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
    104e:	42 30       	cpi	r20, 0x02	; 2
    1050:	51 05       	cpc	r21, r1
    1052:	c1 f4       	brne	.+48     	; 0x1084 <_ZN5Paint9DrawPixelEiii+0xba>
    1054:	77 23       	and	r23, r23
    1056:	8c f1       	brlt	.+98     	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
    1058:	ec 01       	movw	r28, r24
    105a:	aa 81       	ldd	r26, Y+2	; 0x02
    105c:	bb 81       	ldd	r27, Y+3	; 0x03
    105e:	6a 17       	cp	r22, r26
    1060:	7b 07       	cpc	r23, r27
    1062:	5c f5       	brge	.+86     	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
    1064:	ff 23       	and	r31, r31
    1066:	4c f1       	brlt	.+82     	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
    1068:	4c 81       	ldd	r20, Y+4	; 0x04
    106a:	5d 81       	ldd	r21, Y+5	; 0x05
    106c:	e4 17       	cp	r30, r20
    106e:	f5 07       	cpc	r31, r21
    1070:	24 f5       	brge	.+72     	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
    1072:	ed 01       	movw	r28, r26
    1074:	c6 1b       	sub	r28, r22
    1076:	d7 0b       	sbc	r29, r23
    1078:	be 01       	movw	r22, r28
    107a:	4e 1b       	sub	r20, r30
    107c:	5f 0b       	sbc	r21, r31
    107e:	0e 94 10 07 	call	0xe20	; 0xe20 <_ZN5Paint17DrawAbsolutePixelEiii>
    1082:	1b c0       	rjmp	.+54     	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
    1084:	43 30       	cpi	r20, 0x03	; 3
    1086:	51 05       	cpc	r21, r1
    1088:	c1 f4       	brne	.+48     	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
    108a:	77 23       	and	r23, r23
    108c:	b4 f0       	brlt	.+44     	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
    108e:	dc 01       	movw	r26, r24
    1090:	14 96       	adiw	r26, 0x04	; 4
    1092:	4d 91       	ld	r20, X+
    1094:	5c 91       	ld	r21, X
    1096:	15 97       	sbiw	r26, 0x05	; 5
    1098:	64 17       	cp	r22, r20
    109a:	75 07       	cpc	r23, r21
    109c:	74 f4       	brge	.+28     	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
    109e:	ff 23       	and	r31, r31
    10a0:	64 f0       	brlt	.+24     	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
    10a2:	12 96       	adiw	r26, 0x02	; 2
    10a4:	0d 90       	ld	r0, X+
    10a6:	bc 91       	ld	r27, X
    10a8:	a0 2d       	mov	r26, r0
    10aa:	ea 17       	cp	r30, r26
    10ac:	fb 07       	cpc	r31, r27
    10ae:	2c f4       	brge	.+10     	; 0x10ba <_ZN5Paint9DrawPixelEiii+0xf0>
    10b0:	46 1b       	sub	r20, r22
    10b2:	57 0b       	sbc	r21, r23
    10b4:	bf 01       	movw	r22, r30
    10b6:	0e 94 10 07 	call	0xe20	; 0xe20 <_ZN5Paint17DrawAbsolutePixelEiii>
    10ba:	df 91       	pop	r29
    10bc:	cf 91       	pop	r28
    10be:	08 95       	ret

000010c0 <_ZN5Paint10DrawCharAtEiicP6_tFonti>:
    10c0:	2f 92       	push	r2
    10c2:	3f 92       	push	r3
    10c4:	4f 92       	push	r4
    10c6:	5f 92       	push	r5
    10c8:	6f 92       	push	r6
    10ca:	7f 92       	push	r7
    10cc:	8f 92       	push	r8
    10ce:	9f 92       	push	r9
    10d0:	af 92       	push	r10
    10d2:	bf 92       	push	r11
    10d4:	cf 92       	push	r12
    10d6:	df 92       	push	r13
    10d8:	ef 92       	push	r14
    10da:	ff 92       	push	r15
    10dc:	0f 93       	push	r16
    10de:	1f 93       	push	r17
    10e0:	cf 93       	push	r28
    10e2:	df 93       	push	r29
    10e4:	2c 01       	movw	r4, r24
    10e6:	6b 01       	movw	r12, r22
    10e8:	5a 01       	movw	r10, r20
    10ea:	17 01       	movw	r2, r14
    10ec:	82 2f       	mov	r24, r18
    10ee:	90 e0       	ldi	r25, 0x00	; 0
    10f0:	80 97       	sbiw	r24, 0x20	; 32
    10f2:	f8 01       	movw	r30, r16
    10f4:	44 81       	ldd	r20, Z+4	; 0x04
    10f6:	55 81       	ldd	r21, Z+5	; 0x05
    10f8:	84 9f       	mul	r24, r20
    10fa:	90 01       	movw	r18, r0
    10fc:	85 9f       	mul	r24, r21
    10fe:	30 0d       	add	r19, r0
    1100:	94 9f       	mul	r25, r20
    1102:	30 0d       	add	r19, r0
    1104:	11 24       	eor	r1, r1
    1106:	82 81       	ldd	r24, Z+2	; 0x02
    1108:	93 81       	ldd	r25, Z+3	; 0x03
    110a:	ac 01       	movw	r20, r24
    110c:	56 95       	lsr	r21
    110e:	47 95       	ror	r20
    1110:	56 95       	lsr	r21
    1112:	47 95       	ror	r20
    1114:	56 95       	lsr	r21
    1116:	47 95       	ror	r20
    1118:	87 70       	andi	r24, 0x07	; 7
    111a:	99 27       	eor	r25, r25
    111c:	00 97       	sbiw	r24, 0x00	; 0
    111e:	11 f0       	breq	.+4      	; 0x1124 <_ZN5Paint10DrawCharAtEiicP6_tFonti+0x64>
    1120:	81 e0       	ldi	r24, 0x01	; 1
    1122:	90 e0       	ldi	r25, 0x00	; 0
    1124:	84 0f       	add	r24, r20
    1126:	95 1f       	adc	r25, r21
    1128:	28 9f       	mul	r18, r24
    112a:	a0 01       	movw	r20, r0
    112c:	29 9f       	mul	r18, r25
    112e:	50 0d       	add	r21, r0
    1130:	38 9f       	mul	r19, r24
    1132:	50 0d       	add	r21, r0
    1134:	11 24       	eor	r1, r1
    1136:	f8 01       	movw	r30, r16
    1138:	80 80       	ld	r8, Z
    113a:	91 80       	ldd	r9, Z+1	; 0x01
    113c:	84 0e       	add	r8, r20
    113e:	95 1e       	adc	r9, r21
    1140:	61 2c       	mov	r6, r1
    1142:	71 2c       	mov	r7, r1
    1144:	f8 01       	movw	r30, r16
    1146:	84 81       	ldd	r24, Z+4	; 0x04
    1148:	95 81       	ldd	r25, Z+5	; 0x05
    114a:	68 16       	cp	r6, r24
    114c:	79 06       	cpc	r7, r25
    114e:	08 f0       	brcs	.+2      	; 0x1152 <_ZN5Paint10DrawCharAtEiicP6_tFonti+0x92>
    1150:	42 c0       	rjmp	.+132    	; 0x11d6 <_ZN5Paint10DrawCharAtEiicP6_tFonti+0x116>
    1152:	c0 e0       	ldi	r28, 0x00	; 0
    1154:	d0 e0       	ldi	r29, 0x00	; 0
    1156:	f8 01       	movw	r30, r16
    1158:	82 81       	ldd	r24, Z+2	; 0x02
    115a:	93 81       	ldd	r25, Z+3	; 0x03
    115c:	c8 17       	cp	r28, r24
    115e:	d9 07       	cpc	r29, r25
    1160:	78 f5       	brcc	.+94     	; 0x11c0 <_ZN5Paint10DrawCharAtEiicP6_tFonti+0x100>
    1162:	f4 01       	movw	r30, r8
    1164:	44 91       	lpm	r20, Z
    1166:	9e 01       	movw	r18, r28
    1168:	27 70       	andi	r18, 0x07	; 7
    116a:	30 78       	andi	r19, 0x80	; 128
    116c:	33 23       	and	r19, r19
    116e:	34 f4       	brge	.+12     	; 0x117c <_ZN5Paint10DrawCharAtEiicP6_tFonti+0xbc>
    1170:	21 50       	subi	r18, 0x01	; 1
    1172:	31 09       	sbc	r19, r1
    1174:	28 6f       	ori	r18, 0xF8	; 248
    1176:	3f 6f       	ori	r19, 0xFF	; 255
    1178:	2f 5f       	subi	r18, 0xFF	; 255
    117a:	3f 4f       	sbci	r19, 0xFF	; 255
    117c:	79 01       	movw	r14, r18
    117e:	80 e8       	ldi	r24, 0x80	; 128
    1180:	90 e0       	ldi	r25, 0x00	; 0
    1182:	bc 01       	movw	r22, r24
    1184:	02 c0       	rjmp	.+4      	; 0x118a <_ZN5Paint10DrawCharAtEiicP6_tFonti+0xca>
    1186:	75 95       	asr	r23
    1188:	67 95       	ror	r22
    118a:	2a 95       	dec	r18
    118c:	e2 f7       	brpl	.-8      	; 0x1186 <_ZN5Paint10DrawCharAtEiicP6_tFonti+0xc6>
    118e:	84 2f       	mov	r24, r20
    1190:	90 e0       	ldi	r25, 0x00	; 0
    1192:	86 23       	and	r24, r22
    1194:	97 23       	and	r25, r23
    1196:	89 2b       	or	r24, r25
    1198:	51 f0       	breq	.+20     	; 0x11ae <_ZN5Paint10DrawCharAtEiicP6_tFonti+0xee>
    119a:	91 01       	movw	r18, r2
    119c:	a3 01       	movw	r20, r6
    119e:	4a 0d       	add	r20, r10
    11a0:	5b 1d       	adc	r21, r11
    11a2:	be 01       	movw	r22, r28
    11a4:	6c 0d       	add	r22, r12
    11a6:	7d 1d       	adc	r23, r13
    11a8:	c2 01       	movw	r24, r4
    11aa:	0e 94 e5 07 	call	0xfca	; 0xfca <_ZN5Paint9DrawPixelEiii>
    11ae:	77 e0       	ldi	r23, 0x07	; 7
    11b0:	e7 16       	cp	r14, r23
    11b2:	f1 04       	cpc	r15, r1
    11b4:	19 f4       	brne	.+6      	; 0x11bc <_ZN5Paint10DrawCharAtEiicP6_tFonti+0xfc>
    11b6:	8f ef       	ldi	r24, 0xFF	; 255
    11b8:	88 1a       	sub	r8, r24
    11ba:	98 0a       	sbc	r9, r24
    11bc:	21 96       	adiw	r28, 0x01	; 1
    11be:	cb cf       	rjmp	.-106    	; 0x1156 <_ZN5Paint10DrawCharAtEiicP6_tFonti+0x96>
    11c0:	87 70       	andi	r24, 0x07	; 7
    11c2:	99 27       	eor	r25, r25
    11c4:	89 2b       	or	r24, r25
    11c6:	19 f0       	breq	.+6      	; 0x11ce <_ZN5Paint10DrawCharAtEiicP6_tFonti+0x10e>
    11c8:	ef ef       	ldi	r30, 0xFF	; 255
    11ca:	8e 1a       	sub	r8, r30
    11cc:	9e 0a       	sbc	r9, r30
    11ce:	ff ef       	ldi	r31, 0xFF	; 255
    11d0:	6f 1a       	sub	r6, r31
    11d2:	7f 0a       	sbc	r7, r31
    11d4:	b7 cf       	rjmp	.-146    	; 0x1144 <_ZN5Paint10DrawCharAtEiicP6_tFonti+0x84>
    11d6:	df 91       	pop	r29
    11d8:	cf 91       	pop	r28
    11da:	1f 91       	pop	r17
    11dc:	0f 91       	pop	r16
    11de:	ff 90       	pop	r15
    11e0:	ef 90       	pop	r14
    11e2:	df 90       	pop	r13
    11e4:	cf 90       	pop	r12
    11e6:	bf 90       	pop	r11
    11e8:	af 90       	pop	r10
    11ea:	9f 90       	pop	r9
    11ec:	8f 90       	pop	r8
    11ee:	7f 90       	pop	r7
    11f0:	6f 90       	pop	r6
    11f2:	5f 90       	pop	r5
    11f4:	4f 90       	pop	r4
    11f6:	3f 90       	pop	r3
    11f8:	2f 90       	pop	r2
    11fa:	08 95       	ret

000011fc <_ZN5Paint12DrawStringAtEiiPKcP6_tFonti>:
    11fc:	4f 92       	push	r4
    11fe:	5f 92       	push	r5
    1200:	6f 92       	push	r6
    1202:	7f 92       	push	r7
    1204:	8f 92       	push	r8
    1206:	9f 92       	push	r9
    1208:	af 92       	push	r10
    120a:	bf 92       	push	r11
    120c:	cf 92       	push	r12
    120e:	df 92       	push	r13
    1210:	ef 92       	push	r14
    1212:	ff 92       	push	r15
    1214:	0f 93       	push	r16
    1216:	1f 93       	push	r17
    1218:	cf 93       	push	r28
    121a:	df 93       	push	r29
    121c:	4c 01       	movw	r8, r24
    121e:	eb 01       	movw	r28, r22
    1220:	5a 01       	movw	r10, r20
    1222:	39 01       	movw	r6, r18
    1224:	68 01       	movw	r12, r16
    1226:	27 01       	movw	r4, r14
    1228:	f3 01       	movw	r30, r6
    122a:	20 81       	ld	r18, Z
    122c:	22 23       	and	r18, r18
    122e:	81 f0       	breq	.+32     	; 0x1250 <_ZN5Paint12DrawStringAtEiiPKcP6_tFonti+0x54>
    1230:	72 01       	movw	r14, r4
    1232:	86 01       	movw	r16, r12
    1234:	a5 01       	movw	r20, r10
    1236:	be 01       	movw	r22, r28
    1238:	c4 01       	movw	r24, r8
    123a:	0e 94 60 08 	call	0x10c0	; 0x10c0 <_ZN5Paint10DrawCharAtEiicP6_tFonti>
    123e:	f6 01       	movw	r30, r12
    1240:	82 81       	ldd	r24, Z+2	; 0x02
    1242:	93 81       	ldd	r25, Z+3	; 0x03
    1244:	c8 0f       	add	r28, r24
    1246:	d9 1f       	adc	r29, r25
    1248:	ff ef       	ldi	r31, 0xFF	; 255
    124a:	6f 1a       	sub	r6, r31
    124c:	7f 0a       	sbc	r7, r31
    124e:	ec cf       	rjmp	.-40     	; 0x1228 <_ZN5Paint12DrawStringAtEiiPKcP6_tFonti+0x2c>
    1250:	df 91       	pop	r29
    1252:	cf 91       	pop	r28
    1254:	1f 91       	pop	r17
    1256:	0f 91       	pop	r16
    1258:	ff 90       	pop	r15
    125a:	ef 90       	pop	r14
    125c:	df 90       	pop	r13
    125e:	cf 90       	pop	r12
    1260:	bf 90       	pop	r11
    1262:	af 90       	pop	r10
    1264:	9f 90       	pop	r9
    1266:	8f 90       	pop	r8
    1268:	7f 90       	pop	r7
    126a:	6f 90       	pop	r6
    126c:	5f 90       	pop	r5
    126e:	4f 90       	pop	r4
    1270:	08 95       	ret

00001272 <_ZN5Paint18DrawHorizontalLineEiiii>:

/**
*  @brief: this draws a horizontal line on the frame buffer
*/
void Paint::DrawHorizontalLine(int x, int y, int line_width, int colored) {
    1272:	8f 92       	push	r8
    1274:	9f 92       	push	r9
    1276:	af 92       	push	r10
    1278:	bf 92       	push	r11
    127a:	cf 92       	push	r12
    127c:	df 92       	push	r13
    127e:	ef 92       	push	r14
    1280:	ff 92       	push	r15
    1282:	0f 93       	push	r16
    1284:	1f 93       	push	r17
    1286:	cf 93       	push	r28
    1288:	df 93       	push	r29
    128a:	4c 01       	movw	r8, r24
    128c:	7b 01       	movw	r14, r22
    128e:	5a 01       	movw	r10, r20
    1290:	69 01       	movw	r12, r18
    int i;
    for (i = x; i < x + line_width; i++) {
    1292:	eb 01       	movw	r28, r22
    1294:	c7 01       	movw	r24, r14
    1296:	8c 0d       	add	r24, r12
    1298:	9d 1d       	adc	r25, r13
    129a:	c8 17       	cp	r28, r24
    129c:	d9 07       	cpc	r29, r25
    129e:	44 f4       	brge	.+16     	; 0x12b0 <_ZN5Paint18DrawHorizontalLineEiiii+0x3e>
        DrawPixel(i, y, colored);
    12a0:	98 01       	movw	r18, r16
    12a2:	a5 01       	movw	r20, r10
    12a4:	be 01       	movw	r22, r28
    12a6:	c4 01       	movw	r24, r8
    12a8:	0e 94 e5 07 	call	0xfca	; 0xfca <_ZN5Paint9DrawPixelEiii>
/**
*  @brief: this draws a horizontal line on the frame buffer
*/
void Paint::DrawHorizontalLine(int x, int y, int line_width, int colored) {
    int i;
    for (i = x; i < x + line_width; i++) {
    12ac:	21 96       	adiw	r28, 0x01	; 1
    12ae:	f2 cf       	rjmp	.-28     	; 0x1294 <_ZN5Paint18DrawHorizontalLineEiiii+0x22>
        DrawPixel(i, y, colored);
    }
}
    12b0:	df 91       	pop	r29
    12b2:	cf 91       	pop	r28
    12b4:	1f 91       	pop	r17
    12b6:	0f 91       	pop	r16
    12b8:	ff 90       	pop	r15
    12ba:	ef 90       	pop	r14
    12bc:	df 90       	pop	r13
    12be:	cf 90       	pop	r12
    12c0:	bf 90       	pop	r11
    12c2:	af 90       	pop	r10
    12c4:	9f 90       	pop	r9
    12c6:	8f 90       	pop	r8
    12c8:	08 95       	ret

000012ca <_ZN5Paint16DrawVerticalLineEiiii>:

/**
*  @brief: this draws a vertical line on the frame buffer
*/
void Paint::DrawVerticalLine(int x, int y, int line_height, int colored) {
    12ca:	8f 92       	push	r8
    12cc:	9f 92       	push	r9
    12ce:	af 92       	push	r10
    12d0:	bf 92       	push	r11
    12d2:	cf 92       	push	r12
    12d4:	df 92       	push	r13
    12d6:	ef 92       	push	r14
    12d8:	ff 92       	push	r15
    12da:	0f 93       	push	r16
    12dc:	1f 93       	push	r17
    12de:	cf 93       	push	r28
    12e0:	df 93       	push	r29
    12e2:	4c 01       	movw	r8, r24
    12e4:	5b 01       	movw	r10, r22
    12e6:	7a 01       	movw	r14, r20
    12e8:	69 01       	movw	r12, r18
    int i;
    for (i = y; i < y + line_height; i++) {
    12ea:	ea 01       	movw	r28, r20
    12ec:	c7 01       	movw	r24, r14
    12ee:	8c 0d       	add	r24, r12
    12f0:	9d 1d       	adc	r25, r13
    12f2:	c8 17       	cp	r28, r24
    12f4:	d9 07       	cpc	r29, r25
    12f6:	44 f4       	brge	.+16     	; 0x1308 <_ZN5Paint16DrawVerticalLineEiiii+0x3e>
        DrawPixel(x, i, colored);
    12f8:	98 01       	movw	r18, r16
    12fa:	ae 01       	movw	r20, r28
    12fc:	b5 01       	movw	r22, r10
    12fe:	c4 01       	movw	r24, r8
    1300:	0e 94 e5 07 	call	0xfca	; 0xfca <_ZN5Paint9DrawPixelEiii>
/**
*  @brief: this draws a vertical line on the frame buffer
*/
void Paint::DrawVerticalLine(int x, int y, int line_height, int colored) {
    int i;
    for (i = y; i < y + line_height; i++) {
    1304:	21 96       	adiw	r28, 0x01	; 1
    1306:	f2 cf       	rjmp	.-28     	; 0x12ec <_ZN5Paint16DrawVerticalLineEiiii+0x22>
        DrawPixel(x, i, colored);
    }
}
    1308:	df 91       	pop	r29
    130a:	cf 91       	pop	r28
    130c:	1f 91       	pop	r17
    130e:	0f 91       	pop	r16
    1310:	ff 90       	pop	r15
    1312:	ef 90       	pop	r14
    1314:	df 90       	pop	r13
    1316:	cf 90       	pop	r12
    1318:	bf 90       	pop	r11
    131a:	af 90       	pop	r10
    131c:	9f 90       	pop	r9
    131e:	8f 90       	pop	r8
    1320:	08 95       	ret

00001322 <_ZN5Paint13DrawRectangleEiiiii>:

/**
*  @brief: this draws a rectangle
*/
void Paint::DrawRectangle(int x0, int y0, int x1, int y1, int colored) {
    1322:	4f 92       	push	r4
    1324:	5f 92       	push	r5
    1326:	6f 92       	push	r6
    1328:	7f 92       	push	r7
    132a:	8f 92       	push	r8
    132c:	9f 92       	push	r9
    132e:	af 92       	push	r10
    1330:	bf 92       	push	r11
    1332:	cf 92       	push	r12
    1334:	df 92       	push	r13
    1336:	ef 92       	push	r14
    1338:	ff 92       	push	r15
    133a:	0f 93       	push	r16
    133c:	1f 93       	push	r17
    133e:	cf 93       	push	r28
    1340:	df 93       	push	r29
    1342:	5c 01       	movw	r10, r24
    1344:	69 01       	movw	r12, r18
    1346:	e8 01       	movw	r28, r16
    1348:	27 01       	movw	r4, r14
    int min_x, min_y, max_x, max_y;
    min_x = x1 > x0 ? x0 : x1;
    134a:	62 17       	cp	r22, r18
    134c:	73 07       	cpc	r23, r19
    134e:	14 f4       	brge	.+4      	; 0x1354 <_ZN5Paint13DrawRectangleEiiiii+0x32>
    1350:	7b 01       	movw	r14, r22
    1352:	01 c0       	rjmp	.+2      	; 0x1356 <_ZN5Paint13DrawRectangleEiiiii+0x34>
    1354:	79 01       	movw	r14, r18
    max_x = x1 > x0 ? x1 : x0;
    1356:	6c 15       	cp	r22, r12
    1358:	7d 05       	cpc	r23, r13
    135a:	0c f0       	brlt	.+2      	; 0x135e <_ZN5Paint13DrawRectangleEiiiii+0x3c>
    135c:	6b 01       	movw	r12, r22
    min_y = y1 > y0 ? y0 : y1;
    135e:	4c 17       	cp	r20, r28
    1360:	5d 07       	cpc	r21, r29
    1362:	14 f4       	brge	.+4      	; 0x1368 <_ZN5Paint13DrawRectangleEiiiii+0x46>
    1364:	3a 01       	movw	r6, r20
    1366:	01 c0       	rjmp	.+2      	; 0x136a <_ZN5Paint13DrawRectangleEiiiii+0x48>
    1368:	3e 01       	movw	r6, r28
    max_y = y1 > y0 ? y1 : y0;
    136a:	4c 17       	cp	r20, r28
    136c:	5d 07       	cpc	r21, r29
    136e:	0c f0       	brlt	.+2      	; 0x1372 <_ZN5Paint13DrawRectangleEiiiii+0x50>
    1370:	ea 01       	movw	r28, r20
    
    DrawHorizontalLine(min_x, min_y, max_x - min_x + 1, colored);
    1372:	46 01       	movw	r8, r12
    1374:	8e 18       	sub	r8, r14
    1376:	9f 08       	sbc	r9, r15
    1378:	8f ef       	ldi	r24, 0xFF	; 255
    137a:	88 1a       	sub	r8, r24
    137c:	98 0a       	sbc	r9, r24
    137e:	82 01       	movw	r16, r4
    1380:	94 01       	movw	r18, r8
    1382:	a3 01       	movw	r20, r6
    1384:	b7 01       	movw	r22, r14
    1386:	c5 01       	movw	r24, r10
    1388:	0e 94 39 09 	call	0x1272	; 0x1272 <_ZN5Paint18DrawHorizontalLineEiiii>
    DrawHorizontalLine(min_x, max_y, max_x - min_x + 1, colored);
    138c:	94 01       	movw	r18, r8
    138e:	ae 01       	movw	r20, r28
    1390:	b7 01       	movw	r22, r14
    1392:	c5 01       	movw	r24, r10
    1394:	0e 94 39 09 	call	0x1272	; 0x1272 <_ZN5Paint18DrawHorizontalLineEiiii>
    DrawVerticalLine(min_x, min_y, max_y - min_y + 1, colored);
    1398:	c6 19       	sub	r28, r6
    139a:	d7 09       	sbc	r29, r7
    139c:	21 96       	adiw	r28, 0x01	; 1
    139e:	9e 01       	movw	r18, r28
    13a0:	a3 01       	movw	r20, r6
    13a2:	b7 01       	movw	r22, r14
    13a4:	c5 01       	movw	r24, r10
    13a6:	0e 94 65 09 	call	0x12ca	; 0x12ca <_ZN5Paint16DrawVerticalLineEiiii>
    DrawVerticalLine(max_x, min_y, max_y - min_y + 1, colored);
    13aa:	9e 01       	movw	r18, r28
    13ac:	a3 01       	movw	r20, r6
    13ae:	b6 01       	movw	r22, r12
    13b0:	c5 01       	movw	r24, r10
    13b2:	0e 94 65 09 	call	0x12ca	; 0x12ca <_ZN5Paint16DrawVerticalLineEiiii>
}
    13b6:	df 91       	pop	r29
    13b8:	cf 91       	pop	r28
    13ba:	1f 91       	pop	r17
    13bc:	0f 91       	pop	r16
    13be:	ff 90       	pop	r15
    13c0:	ef 90       	pop	r14
    13c2:	df 90       	pop	r13
    13c4:	cf 90       	pop	r12
    13c6:	bf 90       	pop	r11
    13c8:	af 90       	pop	r10
    13ca:	9f 90       	pop	r9
    13cc:	8f 90       	pop	r8
    13ce:	7f 90       	pop	r7
    13d0:	6f 90       	pop	r6
    13d2:	5f 90       	pop	r5
    13d4:	4f 90       	pop	r4
    13d6:	08 95       	ret

000013d8 <_Z41__static_initialization_and_destruction_0ii>:
	cli();
	//char chr = UDR0;
	//serial_buffer[serial_cursor++] = chr;
	UART::transmit(UDR0);
	sei();
    13d8:	0f 93       	push	r16
    13da:	1f 93       	push	r17
    13dc:	cf 93       	push	r28
    13de:	df 93       	push	r29
    13e0:	ec 01       	movw	r28, r24
    13e2:	8b 01       	movw	r16, r22
    13e4:	01 97       	sbiw	r24, 0x01	; 1
    13e6:	89 f4       	brne	.+34     	; 0x140a <_Z41__static_initialization_and_destruction_0ii+0x32>
    13e8:	6f 3f       	cpi	r22, 0xFF	; 255
    13ea:	7f 4f       	sbci	r23, 0xFF	; 255
    13ec:	71 f4       	brne	.+28     	; 0x140a <_Z41__static_initialization_and_destruction_0ii+0x32>
  * In this case, a smaller image buffer is allocated and you have to 
  * update a partial display several times.
  * 1 byte = 8 pixels, therefore you have to set 8*N pixels at a time.
  */
unsigned char image[1024];
Paint paint(image, 0, 0);    // width should be the multiple of 8 
    13ee:	20 e0       	ldi	r18, 0x00	; 0
    13f0:	30 e0       	ldi	r19, 0x00	; 0
    13f2:	40 e0       	ldi	r20, 0x00	; 0
    13f4:	50 e0       	ldi	r21, 0x00	; 0
    13f6:	63 e9       	ldi	r22, 0x93	; 147
    13f8:	71 e0       	ldi	r23, 0x01	; 1
    13fa:	8b e8       	ldi	r24, 0x8B	; 139
    13fc:	91 e0       	ldi	r25, 0x01	; 1
    13fe:	0e 94 f0 06 	call	0xde0	; 0xde0 <_ZN5PaintC1EPhii>
Epd epd;
    1402:	89 e7       	ldi	r24, 0x79	; 121
    1404:	91 e0       	ldi	r25, 0x01	; 1
    1406:	0e 94 aa 03 	call	0x754	; 0x754 <_ZN3EpdC1Ev>
    140a:	cd 2b       	or	r28, r29
    140c:	59 f4       	brne	.+22     	; 0x1424 <_Z41__static_initialization_and_destruction_0ii+0x4c>
    140e:	0f 3f       	cpi	r16, 0xFF	; 255
    1410:	1f 4f       	sbci	r17, 0xFF	; 255
    1412:	41 f4       	brne	.+16     	; 0x1424 <_Z41__static_initialization_and_destruction_0ii+0x4c>
    1414:	89 e7       	ldi	r24, 0x79	; 121
    1416:	91 e0       	ldi	r25, 0x01	; 1
    1418:	0e 94 a7 03 	call	0x74e	; 0x74e <_ZN3EpdD1Ev>
  * In this case, a smaller image buffer is allocated and you have to 
  * update a partial display several times.
  * 1 byte = 8 pixels, therefore you have to set 8*N pixels at a time.
  */
unsigned char image[1024];
Paint paint(image, 0, 0);    // width should be the multiple of 8 
    141c:	8b e8       	ldi	r24, 0x8B	; 139
    141e:	91 e0       	ldi	r25, 0x01	; 1
    1420:	0e 94 0f 07 	call	0xe1e	; 0xe1e <_ZN5PaintD1Ev>
	cli();
	//char chr = UDR0;
	//serial_buffer[serial_cursor++] = chr;
	UART::transmit(UDR0);
	sei();
    1424:	df 91       	pop	r29
    1426:	cf 91       	pop	r28
    1428:	1f 91       	pop	r17
    142a:	0f 91       	pop	r16
    142c:	08 95       	ret

0000142e <_Z5setupv>:



void setup() {
	// put your setup code here, to run once:
    UART::init();
    142e:	0e 94 58 03 	call	0x6b0	; 0x6b0 <_ZN4UART4initEv>
	if (epd.Init(lut_full_update) != 0) {
    1432:	66 e0       	ldi	r22, 0x06	; 6
    1434:	71 e0       	ldi	r23, 0x01	; 1
    1436:	89 e7       	ldi	r24, 0x79	; 121
    1438:	91 e0       	ldi	r25, 0x01	; 1
    143a:	0e 94 32 04 	call	0x864	; 0x864 <_ZN3Epd4InitEPKh>
    143e:	89 2b       	or	r24, r25
    1440:	29 f0       	breq	.+10     	; 0x144c <_Z5setupv+0x1e>
		UART::println("e-Paper init failed");
    1442:	84 e2       	ldi	r24, 0x24	; 36
    1444:	91 e0       	ldi	r25, 0x01	; 1
    1446:	0e 94 84 03 	call	0x708	; 0x708 <_ZN4UART7printlnEPc>
		return;
    144a:	08 95       	ret
	*  there are 2 memory areas embedded in the e-paper display
	*  and once the display is refreshed, the memory area will be auto-toggled,
	*  i.e. the next action of SetFrameMemory will set the other memory area
	*  therefore you have to clear the frame memory twice.
	*/
	epd.ClearFrameMemory(0xFF);   // bit set = white, bit reset = black
    144c:	6f ef       	ldi	r22, 0xFF	; 255
    144e:	89 e7       	ldi	r24, 0x79	; 121
    1450:	91 e0       	ldi	r25, 0x01	; 1
    1452:	0e 94 fd 05 	call	0xbfa	; 0xbfa <_ZN3Epd16ClearFrameMemoryEh>
	epd.DisplayFrame();
    1456:	89 e7       	ldi	r24, 0x79	; 121
    1458:	91 e0       	ldi	r25, 0x01	; 1
    145a:	0e 94 98 04 	call	0x930	; 0x930 <_ZN3Epd12DisplayFrameEv>
	epd.ClearFrameMemory(0xFF);   // bit set = white, bit reset = black
    145e:	6f ef       	ldi	r22, 0xFF	; 255
    1460:	89 e7       	ldi	r24, 0x79	; 121
    1462:	91 e0       	ldi	r25, 0x01	; 1
    1464:	0e 94 fd 05 	call	0xbfa	; 0xbfa <_ZN3Epd16ClearFrameMemoryEh>
	epd.DisplayFrame();
    1468:	89 e7       	ldi	r24, 0x79	; 121
    146a:	91 e0       	ldi	r25, 0x01	; 1
    146c:	0e 94 98 04 	call	0x930	; 0x930 <_ZN3Epd12DisplayFrameEv>


	if (epd.Init(lut_full_update) != 0) {
    1470:	66 e0       	ldi	r22, 0x06	; 6
    1472:	71 e0       	ldi	r23, 0x01	; 1
    1474:	89 e7       	ldi	r24, 0x79	; 121
    1476:	91 e0       	ldi	r25, 0x01	; 1
    1478:	0e 94 32 04 	call	0x864	; 0x864 <_ZN3Epd4InitEPKh>
    147c:	89 2b       	or	r24, r25
    147e:	21 f0       	breq	.+8      	; 0x1488 <_Z5setupv+0x5a>
		UART::println("e-Paper init failed");
    1480:	84 e2       	ldi	r24, 0x24	; 36
    1482:	91 e0       	ldi	r25, 0x01	; 1
    1484:	0e 94 84 03 	call	0x708	; 0x708 <_ZN4UART7printlnEPc>
    1488:	08 95       	ret

0000148a <_Z4loopv>:
		return;
	}
}

void loop() {
    148a:	ef 92       	push	r14
    148c:	ff 92       	push	r15
    148e:	0f 93       	push	r16
    1490:	1f 93       	push	r17
	paint.SetRotate(ROTATE_0);
    1492:	60 e0       	ldi	r22, 0x00	; 0
    1494:	70 e0       	ldi	r23, 0x00	; 0
    1496:	8b e8       	ldi	r24, 0x8B	; 139
    1498:	91 e0       	ldi	r25, 0x01	; 1
    149a:	0e 94 e1 07 	call	0xfc2	; 0xfc2 <_ZN5Paint9SetRotateEi>
	paint.SetWidth(128);
    149e:	60 e8       	ldi	r22, 0x80	; 128
    14a0:	70 e0       	ldi	r23, 0x00	; 0
    14a2:	8b e8       	ldi	r24, 0x8B	; 139
    14a4:	91 e0       	ldi	r25, 0x01	; 1
    14a6:	0e 94 bf 07 	call	0xf7e	; 0xf7e <_ZN5Paint8SetWidthEi>
	paint.SetHeight(32);
    14aa:	60 e2       	ldi	r22, 0x20	; 32
    14ac:	70 e0       	ldi	r23, 0x00	; 0
    14ae:	8b e8       	ldi	r24, 0x8B	; 139
    14b0:	91 e0       	ldi	r25, 0x01	; 1
    14b2:	0e 94 dd 07 	call	0xfba	; 0xfba <_ZN5Paint9SetHeightEi>

	paint.Clear(UNCOLORED);
    14b6:	61 e0       	ldi	r22, 0x01	; 1
    14b8:	70 e0       	ldi	r23, 0x00	; 0
    14ba:	8b e8       	ldi	r24, 0x8B	; 139
    14bc:	91 e0       	ldi	r25, 0x01	; 1
    14be:	0e 94 88 07 	call	0xf10	; 0xf10 <_ZN5Paint5ClearEi>
	paint.DrawStringAt(0, 0, serial_buffer, &Font8_2, COLORED);
    14c2:	e1 2c       	mov	r14, r1
    14c4:	f1 2c       	mov	r15, r1
    14c6:	00 e0       	ldi	r16, 0x00	; 0
    14c8:	11 e0       	ldi	r17, 0x01	; 1
    14ca:	28 e3       	ldi	r18, 0x38	; 56
    14cc:	31 e0       	ldi	r19, 0x01	; 1
    14ce:	40 e0       	ldi	r20, 0x00	; 0
    14d0:	50 e0       	ldi	r21, 0x00	; 0
    14d2:	60 e0       	ldi	r22, 0x00	; 0
    14d4:	70 e0       	ldi	r23, 0x00	; 0
    14d6:	8b e8       	ldi	r24, 0x8B	; 139
    14d8:	91 e0       	ldi	r25, 0x01	; 1
    14da:	0e 94 fe 08 	call	0x11fc	; 0x11fc <_ZN5Paint12DrawStringAtEiiPKcP6_tFonti>
	epd.SetFrameMemory(paint.GetImage(), 0, 0, paint.GetWidth(), paint.GetHeight());
    14de:	8b e8       	ldi	r24, 0x8B	; 139
    14e0:	91 e0       	ldi	r25, 0x01	; 1
    14e2:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <_ZN5Paint9GetHeightEv>
    14e6:	7c 01       	movw	r14, r24
    14e8:	8b e8       	ldi	r24, 0x8B	; 139
    14ea:	91 e0       	ldi	r25, 0x01	; 1
    14ec:	0e 94 bb 07 	call	0xf76	; 0xf76 <_ZN5Paint8GetWidthEv>
    14f0:	8c 01       	movw	r16, r24
    14f2:	8b e8       	ldi	r24, 0x8B	; 139
    14f4:	91 e0       	ldi	r25, 0x01	; 1
    14f6:	0e 94 b7 07 	call	0xf6e	; 0xf6e <_ZN5Paint8GetImageEv>
    14fa:	20 e0       	ldi	r18, 0x00	; 0
    14fc:	30 e0       	ldi	r19, 0x00	; 0
    14fe:	40 e0       	ldi	r20, 0x00	; 0
    1500:	50 e0       	ldi	r21, 0x00	; 0
    1502:	bc 01       	movw	r22, r24
    1504:	89 e7       	ldi	r24, 0x79	; 121
    1506:	91 e0       	ldi	r25, 0x01	; 1
    1508:	0e 94 22 05 	call	0xa44	; 0xa44 <_ZN3Epd14SetFrameMemoryEPKhiiii>

	
	paint.SetWidth(65);
    150c:	61 e4       	ldi	r22, 0x41	; 65
    150e:	70 e0       	ldi	r23, 0x00	; 0
    1510:	8b e8       	ldi	r24, 0x8B	; 139
    1512:	91 e0       	ldi	r25, 0x01	; 1
    1514:	0e 94 bf 07 	call	0xf7e	; 0xf7e <_ZN5Paint8SetWidthEi>
	paint.SetHeight(65);
    1518:	61 e4       	ldi	r22, 0x41	; 65
    151a:	70 e0       	ldi	r23, 0x00	; 0
    151c:	8b e8       	ldi	r24, 0x8B	; 139
    151e:	91 e0       	ldi	r25, 0x01	; 1
    1520:	0e 94 dd 07 	call	0xfba	; 0xfba <_ZN5Paint9SetHeightEi>
	
	paint.Clear(UNCOLORED);
    1524:	61 e0       	ldi	r22, 0x01	; 1
    1526:	70 e0       	ldi	r23, 0x00	; 0
    1528:	8b e8       	ldi	r24, 0x8B	; 139
    152a:	91 e0       	ldi	r25, 0x01	; 1
    152c:	0e 94 88 07 	call	0xf10	; 0xf10 <_ZN5Paint5ClearEi>
	paint.DrawRectangle(0, 0, 64, 64, COLORED);
    1530:	e1 2c       	mov	r14, r1
    1532:	f1 2c       	mov	r15, r1
    1534:	00 e4       	ldi	r16, 0x40	; 64
    1536:	10 e0       	ldi	r17, 0x00	; 0
    1538:	20 e4       	ldi	r18, 0x40	; 64
    153a:	30 e0       	ldi	r19, 0x00	; 0
    153c:	40 e0       	ldi	r20, 0x00	; 0
    153e:	50 e0       	ldi	r21, 0x00	; 0
    1540:	60 e0       	ldi	r22, 0x00	; 0
    1542:	70 e0       	ldi	r23, 0x00	; 0
    1544:	8b e8       	ldi	r24, 0x8B	; 139
    1546:	91 e0       	ldi	r25, 0x01	; 1
    1548:	0e 94 91 09 	call	0x1322	; 0x1322 <_ZN5Paint13DrawRectangleEiiiii>
	epd.SetFrameMemory(paint.GetImage(), 32, 116, paint.GetWidth(), paint.GetHeight());
    154c:	8b e8       	ldi	r24, 0x8B	; 139
    154e:	91 e0       	ldi	r25, 0x01	; 1
    1550:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <_ZN5Paint9GetHeightEv>
    1554:	7c 01       	movw	r14, r24
    1556:	8b e8       	ldi	r24, 0x8B	; 139
    1558:	91 e0       	ldi	r25, 0x01	; 1
    155a:	0e 94 bb 07 	call	0xf76	; 0xf76 <_ZN5Paint8GetWidthEv>
    155e:	8c 01       	movw	r16, r24
    1560:	8b e8       	ldi	r24, 0x8B	; 139
    1562:	91 e0       	ldi	r25, 0x01	; 1
    1564:	0e 94 b7 07 	call	0xf6e	; 0xf6e <_ZN5Paint8GetImageEv>
    1568:	24 e7       	ldi	r18, 0x74	; 116
    156a:	30 e0       	ldi	r19, 0x00	; 0
    156c:	40 e2       	ldi	r20, 0x20	; 32
    156e:	50 e0       	ldi	r21, 0x00	; 0
    1570:	bc 01       	movw	r22, r24
    1572:	89 e7       	ldi	r24, 0x79	; 121
    1574:	91 e0       	ldi	r25, 0x01	; 1
    1576:	0e 94 22 05 	call	0xa44	; 0xa44 <_ZN3Epd14SetFrameMemoryEPKhiiii>
	epd.DisplayFrame();
    157a:	89 e7       	ldi	r24, 0x79	; 121
    157c:	91 e0       	ldi	r25, 0x01	; 1
    157e:	0e 94 98 04 	call	0x930	; 0x930 <_ZN3Epd12DisplayFrameEv>
	epd.SetFrameMemory(paint.GetImage(), 32, 116, paint.GetWidth(), paint.GetHeight());
    1582:	8b e8       	ldi	r24, 0x8B	; 139
    1584:	91 e0       	ldi	r25, 0x01	; 1
    1586:	0e 94 d9 07 	call	0xfb2	; 0xfb2 <_ZN5Paint9GetHeightEv>
    158a:	7c 01       	movw	r14, r24
    158c:	8b e8       	ldi	r24, 0x8B	; 139
    158e:	91 e0       	ldi	r25, 0x01	; 1
    1590:	0e 94 bb 07 	call	0xf76	; 0xf76 <_ZN5Paint8GetWidthEv>
    1594:	8c 01       	movw	r16, r24
    1596:	8b e8       	ldi	r24, 0x8B	; 139
    1598:	91 e0       	ldi	r25, 0x01	; 1
    159a:	0e 94 b7 07 	call	0xf6e	; 0xf6e <_ZN5Paint8GetImageEv>
    159e:	24 e7       	ldi	r18, 0x74	; 116
    15a0:	30 e0       	ldi	r19, 0x00	; 0
    15a2:	40 e2       	ldi	r20, 0x20	; 32
    15a4:	50 e0       	ldi	r21, 0x00	; 0
    15a6:	bc 01       	movw	r22, r24
    15a8:	89 e7       	ldi	r24, 0x79	; 121
    15aa:	91 e0       	ldi	r25, 0x01	; 1
    15ac:	0e 94 22 05 	call	0xa44	; 0xa44 <_ZN3Epd14SetFrameMemoryEPKhiiii>
	epd.DisplayFrame();
    15b0:	89 e7       	ldi	r24, 0x79	; 121
    15b2:	91 e0       	ldi	r25, 0x01	; 1
    15b4:	0e 94 98 04 	call	0x930	; 0x930 <_ZN3Epd12DisplayFrameEv>
	
	paint.Clear(UNCOLORED);
    15b8:	61 e0       	ldi	r22, 0x01	; 1
    15ba:	70 e0       	ldi	r23, 0x00	; 0
    15bc:	8b e8       	ldi	r24, 0x8B	; 139
    15be:	91 e0       	ldi	r25, 0x01	; 1
    15c0:	0e 94 88 07 	call	0xf10	; 0xf10 <_ZN5Paint5ClearEi>
	for(uint8_t i = 0; i < 64; i++) {
    15c4:	80 e0       	ldi	r24, 0x00	; 0
    15c6:	80 34       	cpi	r24, 0x40	; 64
    15c8:	38 f4       	brcc	.+14     	; 0x15d8 <_Z4loopv+0x14e>
		serial_buffer[i] = 0;
    15ca:	e8 2f       	mov	r30, r24
    15cc:	f0 e0       	ldi	r31, 0x00	; 0
    15ce:	e8 5c       	subi	r30, 0xC8	; 200
    15d0:	fe 4f       	sbci	r31, 0xFE	; 254
    15d2:	10 82       	st	Z, r1
	epd.DisplayFrame();
	epd.SetFrameMemory(paint.GetImage(), 32, 116, paint.GetWidth(), paint.GetHeight());
	epd.DisplayFrame();
	
	paint.Clear(UNCOLORED);
	for(uint8_t i = 0; i < 64; i++) {
    15d4:	8f 5f       	subi	r24, 0xFF	; 255
    15d6:	f7 cf       	rjmp	.-18     	; 0x15c6 <_Z4loopv+0x13c>
		serial_buffer[i] = 0;
	}
	serial_cursor = 0;
    15d8:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <serial_cursor>
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15dc:	80 e2       	ldi	r24, 0x20	; 32
    15de:	9e e4       	ldi	r25, 0x4E	; 78
		while(__ticks)
    15e0:	00 97       	sbiw	r24, 0x00	; 0
    15e2:	31 f0       	breq	.+12     	; 0x15f0 <_Z4loopv+0x166>
    15e4:	e8 ec       	ldi	r30, 0xC8	; 200
    15e6:	f0 e0       	ldi	r31, 0x00	; 0
    15e8:	31 97       	sbiw	r30, 0x01	; 1
    15ea:	f1 f7       	brne	.-4      	; 0x15e8 <_Z4loopv+0x15e>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    15ec:	01 97       	sbiw	r24, 0x01	; 1
    15ee:	f8 cf       	rjmp	.-16     	; 0x15e0 <_Z4loopv+0x156>
	_delay_ms(2000);
}
    15f0:	1f 91       	pop	r17
    15f2:	0f 91       	pop	r16
    15f4:	ff 90       	pop	r15
    15f6:	ef 90       	pop	r14
    15f8:	08 95       	ret

000015fa <main>:


int main(void)
{
	/* Replace with your application code */
	UART::init();
    15fa:	0e 94 58 03 	call	0x6b0	; 0x6b0 <_ZN4UART4initEv>
	if (epd.Init(lut_full_update) != 0) {
    15fe:	66 e0       	ldi	r22, 0x06	; 6
    1600:	71 e0       	ldi	r23, 0x01	; 1
    1602:	89 e7       	ldi	r24, 0x79	; 121
    1604:	91 e0       	ldi	r25, 0x01	; 1
    1606:	0e 94 32 04 	call	0x864	; 0x864 <_ZN3Epd4InitEPKh>
    160a:	89 2b       	or	r24, r25
    160c:	21 f0       	breq	.+8      	; 0x1616 <main+0x1c>
		UART::println("e-Paper init failed");
    160e:	84 e2       	ldi	r24, 0x24	; 36
    1610:	91 e0       	ldi	r25, 0x01	; 1
    1612:	0e 94 84 03 	call	0x708	; 0x708 <_ZN4UART7printlnEPc>
	}
	setup();
    1616:	0e 94 17 0a 	call	0x142e	; 0x142e <_Z5setupv>
	//Enable receiver and transmitter
	//UCSR0B = (1<<RXEN0)|(1<<TXEN0);
	/* Set frame format: 8 data bits, 1 even parity bit, 2 stop bits */
	//UCSR0C = (1<<UPM01)|(1<<USBS0)|(3<<UCSZ00);
	//while (1) {
		loop();
    161a:	0e 94 45 0a 	call	0x148a	; 0x148a <_Z4loopv>
	//}
	while (1) {
		asm volatile("nop");
    161e:	00 00       	nop
    1620:	fe cf       	rjmp	.-4      	; 0x161e <main+0x24>

00001622 <__vector_18>:
	//UDR0 = 'e';
	//UART::println((char*)"Hello World!");
	
}

ISR(USART_RX_vect) {
    1622:	1f 92       	push	r1
    1624:	0f 92       	push	r0
    1626:	0f b6       	in	r0, 0x3f	; 63
    1628:	0f 92       	push	r0
    162a:	11 24       	eor	r1, r1
    162c:	2f 93       	push	r18
    162e:	3f 93       	push	r19
    1630:	4f 93       	push	r20
    1632:	5f 93       	push	r21
    1634:	6f 93       	push	r22
    1636:	7f 93       	push	r23
    1638:	8f 93       	push	r24
    163a:	9f 93       	push	r25
    163c:	af 93       	push	r26
    163e:	bf 93       	push	r27
    1640:	ef 93       	push	r30
    1642:	ff 93       	push	r31
	cli();
    1644:	f8 94       	cli
	//char chr = UDR0;
	//serial_buffer[serial_cursor++] = chr;
	UART::transmit(UDR0);
    1646:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
    164a:	0e 94 65 03 	call	0x6ca	; 0x6ca <_ZN4UART8transmitEc>
	sei();
    164e:	78 94       	sei
    1650:	ff 91       	pop	r31
    1652:	ef 91       	pop	r30
    1654:	bf 91       	pop	r27
    1656:	af 91       	pop	r26
    1658:	9f 91       	pop	r25
    165a:	8f 91       	pop	r24
    165c:	7f 91       	pop	r23
    165e:	6f 91       	pop	r22
    1660:	5f 91       	pop	r21
    1662:	4f 91       	pop	r20
    1664:	3f 91       	pop	r19
    1666:	2f 91       	pop	r18
    1668:	0f 90       	pop	r0
    166a:	0f be       	out	0x3f, r0	; 63
    166c:	0f 90       	pop	r0
    166e:	1f 90       	pop	r1
    1670:	18 95       	reti

00001672 <_GLOBAL__sub_I_image>:
    1672:	6f ef       	ldi	r22, 0xFF	; 255
    1674:	7f ef       	ldi	r23, 0xFF	; 255
    1676:	81 e0       	ldi	r24, 0x01	; 1
    1678:	90 e0       	ldi	r25, 0x00	; 0
    167a:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <_Z41__static_initialization_and_destruction_0ii>
    167e:	08 95       	ret

00001680 <_GLOBAL__sub_D_image>:
    1680:	6f ef       	ldi	r22, 0xFF	; 255
    1682:	7f ef       	ldi	r23, 0xFF	; 255
    1684:	80 e0       	ldi	r24, 0x00	; 0
    1686:	90 e0       	ldi	r25, 0x00	; 0
    1688:	0e 94 ec 09 	call	0x13d8	; 0x13d8 <_Z41__static_initialization_and_destruction_0ii>
    168c:	08 95       	ret

0000168e <__cmpsf2>:
    168e:	0e 94 b8 0b 	call	0x1770	; 0x1770 <__fp_cmp>
    1692:	08 f4       	brcc	.+2      	; 0x1696 <__cmpsf2+0x8>
    1694:	81 e0       	ldi	r24, 0x01	; 1
    1696:	08 95       	ret

00001698 <__fixunssfsi>:
    1698:	0e 94 e4 0b 	call	0x17c8	; 0x17c8 <__fp_splitA>
    169c:	88 f0       	brcs	.+34     	; 0x16c0 <__fixunssfsi+0x28>
    169e:	9f 57       	subi	r25, 0x7F	; 127
    16a0:	98 f0       	brcs	.+38     	; 0x16c8 <__fixunssfsi+0x30>
    16a2:	b9 2f       	mov	r27, r25
    16a4:	99 27       	eor	r25, r25
    16a6:	b7 51       	subi	r27, 0x17	; 23
    16a8:	b0 f0       	brcs	.+44     	; 0x16d6 <__fixunssfsi+0x3e>
    16aa:	e1 f0       	breq	.+56     	; 0x16e4 <__fixunssfsi+0x4c>
    16ac:	66 0f       	add	r22, r22
    16ae:	77 1f       	adc	r23, r23
    16b0:	88 1f       	adc	r24, r24
    16b2:	99 1f       	adc	r25, r25
    16b4:	1a f0       	brmi	.+6      	; 0x16bc <__fixunssfsi+0x24>
    16b6:	ba 95       	dec	r27
    16b8:	c9 f7       	brne	.-14     	; 0x16ac <__fixunssfsi+0x14>
    16ba:	14 c0       	rjmp	.+40     	; 0x16e4 <__fixunssfsi+0x4c>
    16bc:	b1 30       	cpi	r27, 0x01	; 1
    16be:	91 f0       	breq	.+36     	; 0x16e4 <__fixunssfsi+0x4c>
    16c0:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <__fp_zero>
    16c4:	b1 e0       	ldi	r27, 0x01	; 1
    16c6:	08 95       	ret
    16c8:	0c 94 fe 0b 	jmp	0x17fc	; 0x17fc <__fp_zero>
    16cc:	67 2f       	mov	r22, r23
    16ce:	78 2f       	mov	r23, r24
    16d0:	88 27       	eor	r24, r24
    16d2:	b8 5f       	subi	r27, 0xF8	; 248
    16d4:	39 f0       	breq	.+14     	; 0x16e4 <__fixunssfsi+0x4c>
    16d6:	b9 3f       	cpi	r27, 0xF9	; 249
    16d8:	cc f3       	brlt	.-14     	; 0x16cc <__fixunssfsi+0x34>
    16da:	86 95       	lsr	r24
    16dc:	77 95       	ror	r23
    16de:	67 95       	ror	r22
    16e0:	b3 95       	inc	r27
    16e2:	d9 f7       	brne	.-10     	; 0x16da <__fixunssfsi+0x42>
    16e4:	3e f4       	brtc	.+14     	; 0x16f4 <__fixunssfsi+0x5c>
    16e6:	90 95       	com	r25
    16e8:	80 95       	com	r24
    16ea:	70 95       	com	r23
    16ec:	61 95       	neg	r22
    16ee:	7f 4f       	sbci	r23, 0xFF	; 255
    16f0:	8f 4f       	sbci	r24, 0xFF	; 255
    16f2:	9f 4f       	sbci	r25, 0xFF	; 255
    16f4:	08 95       	ret

000016f6 <__floatunsisf>:
    16f6:	e8 94       	clt
    16f8:	09 c0       	rjmp	.+18     	; 0x170c <__floatsisf+0x12>

000016fa <__floatsisf>:
    16fa:	97 fb       	bst	r25, 7
    16fc:	3e f4       	brtc	.+14     	; 0x170c <__floatsisf+0x12>
    16fe:	90 95       	com	r25
    1700:	80 95       	com	r24
    1702:	70 95       	com	r23
    1704:	61 95       	neg	r22
    1706:	7f 4f       	sbci	r23, 0xFF	; 255
    1708:	8f 4f       	sbci	r24, 0xFF	; 255
    170a:	9f 4f       	sbci	r25, 0xFF	; 255
    170c:	99 23       	and	r25, r25
    170e:	a9 f0       	breq	.+42     	; 0x173a <__floatsisf+0x40>
    1710:	f9 2f       	mov	r31, r25
    1712:	96 e9       	ldi	r25, 0x96	; 150
    1714:	bb 27       	eor	r27, r27
    1716:	93 95       	inc	r25
    1718:	f6 95       	lsr	r31
    171a:	87 95       	ror	r24
    171c:	77 95       	ror	r23
    171e:	67 95       	ror	r22
    1720:	b7 95       	ror	r27
    1722:	f1 11       	cpse	r31, r1
    1724:	f8 cf       	rjmp	.-16     	; 0x1716 <__floatsisf+0x1c>
    1726:	fa f4       	brpl	.+62     	; 0x1766 <__floatsisf+0x6c>
    1728:	bb 0f       	add	r27, r27
    172a:	11 f4       	brne	.+4      	; 0x1730 <__floatsisf+0x36>
    172c:	60 ff       	sbrs	r22, 0
    172e:	1b c0       	rjmp	.+54     	; 0x1766 <__floatsisf+0x6c>
    1730:	6f 5f       	subi	r22, 0xFF	; 255
    1732:	7f 4f       	sbci	r23, 0xFF	; 255
    1734:	8f 4f       	sbci	r24, 0xFF	; 255
    1736:	9f 4f       	sbci	r25, 0xFF	; 255
    1738:	16 c0       	rjmp	.+44     	; 0x1766 <__floatsisf+0x6c>
    173a:	88 23       	and	r24, r24
    173c:	11 f0       	breq	.+4      	; 0x1742 <__floatsisf+0x48>
    173e:	96 e9       	ldi	r25, 0x96	; 150
    1740:	11 c0       	rjmp	.+34     	; 0x1764 <__floatsisf+0x6a>
    1742:	77 23       	and	r23, r23
    1744:	21 f0       	breq	.+8      	; 0x174e <__floatsisf+0x54>
    1746:	9e e8       	ldi	r25, 0x8E	; 142
    1748:	87 2f       	mov	r24, r23
    174a:	76 2f       	mov	r23, r22
    174c:	05 c0       	rjmp	.+10     	; 0x1758 <__floatsisf+0x5e>
    174e:	66 23       	and	r22, r22
    1750:	71 f0       	breq	.+28     	; 0x176e <__floatsisf+0x74>
    1752:	96 e8       	ldi	r25, 0x86	; 134
    1754:	86 2f       	mov	r24, r22
    1756:	70 e0       	ldi	r23, 0x00	; 0
    1758:	60 e0       	ldi	r22, 0x00	; 0
    175a:	2a f0       	brmi	.+10     	; 0x1766 <__floatsisf+0x6c>
    175c:	9a 95       	dec	r25
    175e:	66 0f       	add	r22, r22
    1760:	77 1f       	adc	r23, r23
    1762:	88 1f       	adc	r24, r24
    1764:	da f7       	brpl	.-10     	; 0x175c <__floatsisf+0x62>
    1766:	88 0f       	add	r24, r24
    1768:	96 95       	lsr	r25
    176a:	87 95       	ror	r24
    176c:	97 f9       	bld	r25, 7
    176e:	08 95       	ret

00001770 <__fp_cmp>:
    1770:	99 0f       	add	r25, r25
    1772:	00 08       	sbc	r0, r0
    1774:	55 0f       	add	r21, r21
    1776:	aa 0b       	sbc	r26, r26
    1778:	e0 e8       	ldi	r30, 0x80	; 128
    177a:	fe ef       	ldi	r31, 0xFE	; 254
    177c:	16 16       	cp	r1, r22
    177e:	17 06       	cpc	r1, r23
    1780:	e8 07       	cpc	r30, r24
    1782:	f9 07       	cpc	r31, r25
    1784:	c0 f0       	brcs	.+48     	; 0x17b6 <__fp_cmp+0x46>
    1786:	12 16       	cp	r1, r18
    1788:	13 06       	cpc	r1, r19
    178a:	e4 07       	cpc	r30, r20
    178c:	f5 07       	cpc	r31, r21
    178e:	98 f0       	brcs	.+38     	; 0x17b6 <__fp_cmp+0x46>
    1790:	62 1b       	sub	r22, r18
    1792:	73 0b       	sbc	r23, r19
    1794:	84 0b       	sbc	r24, r20
    1796:	95 0b       	sbc	r25, r21
    1798:	39 f4       	brne	.+14     	; 0x17a8 <__fp_cmp+0x38>
    179a:	0a 26       	eor	r0, r26
    179c:	61 f0       	breq	.+24     	; 0x17b6 <__fp_cmp+0x46>
    179e:	23 2b       	or	r18, r19
    17a0:	24 2b       	or	r18, r20
    17a2:	25 2b       	or	r18, r21
    17a4:	21 f4       	brne	.+8      	; 0x17ae <__fp_cmp+0x3e>
    17a6:	08 95       	ret
    17a8:	0a 26       	eor	r0, r26
    17aa:	09 f4       	brne	.+2      	; 0x17ae <__fp_cmp+0x3e>
    17ac:	a1 40       	sbci	r26, 0x01	; 1
    17ae:	a6 95       	lsr	r26
    17b0:	8f ef       	ldi	r24, 0xFF	; 255
    17b2:	81 1d       	adc	r24, r1
    17b4:	81 1d       	adc	r24, r1
    17b6:	08 95       	ret

000017b8 <__fp_split3>:
    17b8:	57 fd       	sbrc	r21, 7
    17ba:	90 58       	subi	r25, 0x80	; 128
    17bc:	44 0f       	add	r20, r20
    17be:	55 1f       	adc	r21, r21
    17c0:	59 f0       	breq	.+22     	; 0x17d8 <__fp_splitA+0x10>
    17c2:	5f 3f       	cpi	r21, 0xFF	; 255
    17c4:	71 f0       	breq	.+28     	; 0x17e2 <__fp_splitA+0x1a>
    17c6:	47 95       	ror	r20

000017c8 <__fp_splitA>:
    17c8:	88 0f       	add	r24, r24
    17ca:	97 fb       	bst	r25, 7
    17cc:	99 1f       	adc	r25, r25
    17ce:	61 f0       	breq	.+24     	; 0x17e8 <__fp_splitA+0x20>
    17d0:	9f 3f       	cpi	r25, 0xFF	; 255
    17d2:	79 f0       	breq	.+30     	; 0x17f2 <__fp_splitA+0x2a>
    17d4:	87 95       	ror	r24
    17d6:	08 95       	ret
    17d8:	12 16       	cp	r1, r18
    17da:	13 06       	cpc	r1, r19
    17dc:	14 06       	cpc	r1, r20
    17de:	55 1f       	adc	r21, r21
    17e0:	f2 cf       	rjmp	.-28     	; 0x17c6 <__fp_split3+0xe>
    17e2:	46 95       	lsr	r20
    17e4:	f1 df       	rcall	.-30     	; 0x17c8 <__fp_splitA>
    17e6:	08 c0       	rjmp	.+16     	; 0x17f8 <__fp_splitA+0x30>
    17e8:	16 16       	cp	r1, r22
    17ea:	17 06       	cpc	r1, r23
    17ec:	18 06       	cpc	r1, r24
    17ee:	99 1f       	adc	r25, r25
    17f0:	f1 cf       	rjmp	.-30     	; 0x17d4 <__fp_splitA+0xc>
    17f2:	86 95       	lsr	r24
    17f4:	71 05       	cpc	r23, r1
    17f6:	61 05       	cpc	r22, r1
    17f8:	08 94       	sec
    17fa:	08 95       	ret

000017fc <__fp_zero>:
    17fc:	e8 94       	clt

000017fe <__fp_szero>:
    17fe:	bb 27       	eor	r27, r27
    1800:	66 27       	eor	r22, r22
    1802:	77 27       	eor	r23, r23
    1804:	cb 01       	movw	r24, r22
    1806:	97 f9       	bld	r25, 7
    1808:	08 95       	ret

0000180a <__gesf2>:
    180a:	0e 94 b8 0b 	call	0x1770	; 0x1770 <__fp_cmp>
    180e:	08 f4       	brcc	.+2      	; 0x1812 <__gesf2+0x8>
    1810:	8f ef       	ldi	r24, 0xFF	; 255
    1812:	08 95       	ret

00001814 <__mulsf3>:
    1814:	0e 94 1d 0c 	call	0x183a	; 0x183a <__mulsf3x>
    1818:	0c 94 8e 0c 	jmp	0x191c	; 0x191c <__fp_round>
    181c:	0e 94 80 0c 	call	0x1900	; 0x1900 <__fp_pscA>
    1820:	38 f0       	brcs	.+14     	; 0x1830 <__mulsf3+0x1c>
    1822:	0e 94 87 0c 	call	0x190e	; 0x190e <__fp_pscB>
    1826:	20 f0       	brcs	.+8      	; 0x1830 <__mulsf3+0x1c>
    1828:	95 23       	and	r25, r21
    182a:	11 f0       	breq	.+4      	; 0x1830 <__mulsf3+0x1c>
    182c:	0c 94 77 0c 	jmp	0x18ee	; 0x18ee <__fp_inf>
    1830:	0c 94 7d 0c 	jmp	0x18fa	; 0x18fa <__fp_nan>
    1834:	11 24       	eor	r1, r1
    1836:	0c 94 ff 0b 	jmp	0x17fe	; 0x17fe <__fp_szero>

0000183a <__mulsf3x>:
    183a:	0e 94 dc 0b 	call	0x17b8	; 0x17b8 <__fp_split3>
    183e:	70 f3       	brcs	.-36     	; 0x181c <__mulsf3+0x8>

00001840 <__mulsf3_pse>:
    1840:	95 9f       	mul	r25, r21
    1842:	c1 f3       	breq	.-16     	; 0x1834 <__mulsf3+0x20>
    1844:	95 0f       	add	r25, r21
    1846:	50 e0       	ldi	r21, 0x00	; 0
    1848:	55 1f       	adc	r21, r21
    184a:	62 9f       	mul	r22, r18
    184c:	f0 01       	movw	r30, r0
    184e:	72 9f       	mul	r23, r18
    1850:	bb 27       	eor	r27, r27
    1852:	f0 0d       	add	r31, r0
    1854:	b1 1d       	adc	r27, r1
    1856:	63 9f       	mul	r22, r19
    1858:	aa 27       	eor	r26, r26
    185a:	f0 0d       	add	r31, r0
    185c:	b1 1d       	adc	r27, r1
    185e:	aa 1f       	adc	r26, r26
    1860:	64 9f       	mul	r22, r20
    1862:	66 27       	eor	r22, r22
    1864:	b0 0d       	add	r27, r0
    1866:	a1 1d       	adc	r26, r1
    1868:	66 1f       	adc	r22, r22
    186a:	82 9f       	mul	r24, r18
    186c:	22 27       	eor	r18, r18
    186e:	b0 0d       	add	r27, r0
    1870:	a1 1d       	adc	r26, r1
    1872:	62 1f       	adc	r22, r18
    1874:	73 9f       	mul	r23, r19
    1876:	b0 0d       	add	r27, r0
    1878:	a1 1d       	adc	r26, r1
    187a:	62 1f       	adc	r22, r18
    187c:	83 9f       	mul	r24, r19
    187e:	a0 0d       	add	r26, r0
    1880:	61 1d       	adc	r22, r1
    1882:	22 1f       	adc	r18, r18
    1884:	74 9f       	mul	r23, r20
    1886:	33 27       	eor	r19, r19
    1888:	a0 0d       	add	r26, r0
    188a:	61 1d       	adc	r22, r1
    188c:	23 1f       	adc	r18, r19
    188e:	84 9f       	mul	r24, r20
    1890:	60 0d       	add	r22, r0
    1892:	21 1d       	adc	r18, r1
    1894:	82 2f       	mov	r24, r18
    1896:	76 2f       	mov	r23, r22
    1898:	6a 2f       	mov	r22, r26
    189a:	11 24       	eor	r1, r1
    189c:	9f 57       	subi	r25, 0x7F	; 127
    189e:	50 40       	sbci	r21, 0x00	; 0
    18a0:	9a f0       	brmi	.+38     	; 0x18c8 <__mulsf3_pse+0x88>
    18a2:	f1 f0       	breq	.+60     	; 0x18e0 <__mulsf3_pse+0xa0>
    18a4:	88 23       	and	r24, r24
    18a6:	4a f0       	brmi	.+18     	; 0x18ba <__mulsf3_pse+0x7a>
    18a8:	ee 0f       	add	r30, r30
    18aa:	ff 1f       	adc	r31, r31
    18ac:	bb 1f       	adc	r27, r27
    18ae:	66 1f       	adc	r22, r22
    18b0:	77 1f       	adc	r23, r23
    18b2:	88 1f       	adc	r24, r24
    18b4:	91 50       	subi	r25, 0x01	; 1
    18b6:	50 40       	sbci	r21, 0x00	; 0
    18b8:	a9 f7       	brne	.-22     	; 0x18a4 <__mulsf3_pse+0x64>
    18ba:	9e 3f       	cpi	r25, 0xFE	; 254
    18bc:	51 05       	cpc	r21, r1
    18be:	80 f0       	brcs	.+32     	; 0x18e0 <__mulsf3_pse+0xa0>
    18c0:	0c 94 77 0c 	jmp	0x18ee	; 0x18ee <__fp_inf>
    18c4:	0c 94 ff 0b 	jmp	0x17fe	; 0x17fe <__fp_szero>
    18c8:	5f 3f       	cpi	r21, 0xFF	; 255
    18ca:	e4 f3       	brlt	.-8      	; 0x18c4 <__mulsf3_pse+0x84>
    18cc:	98 3e       	cpi	r25, 0xE8	; 232
    18ce:	d4 f3       	brlt	.-12     	; 0x18c4 <__mulsf3_pse+0x84>
    18d0:	86 95       	lsr	r24
    18d2:	77 95       	ror	r23
    18d4:	67 95       	ror	r22
    18d6:	b7 95       	ror	r27
    18d8:	f7 95       	ror	r31
    18da:	e7 95       	ror	r30
    18dc:	9f 5f       	subi	r25, 0xFF	; 255
    18de:	c1 f7       	brne	.-16     	; 0x18d0 <__mulsf3_pse+0x90>
    18e0:	fe 2b       	or	r31, r30
    18e2:	88 0f       	add	r24, r24
    18e4:	91 1d       	adc	r25, r1
    18e6:	96 95       	lsr	r25
    18e8:	87 95       	ror	r24
    18ea:	97 f9       	bld	r25, 7
    18ec:	08 95       	ret

000018ee <__fp_inf>:
    18ee:	97 f9       	bld	r25, 7
    18f0:	9f 67       	ori	r25, 0x7F	; 127
    18f2:	80 e8       	ldi	r24, 0x80	; 128
    18f4:	70 e0       	ldi	r23, 0x00	; 0
    18f6:	60 e0       	ldi	r22, 0x00	; 0
    18f8:	08 95       	ret

000018fa <__fp_nan>:
    18fa:	9f ef       	ldi	r25, 0xFF	; 255
    18fc:	80 ec       	ldi	r24, 0xC0	; 192
    18fe:	08 95       	ret

00001900 <__fp_pscA>:
    1900:	00 24       	eor	r0, r0
    1902:	0a 94       	dec	r0
    1904:	16 16       	cp	r1, r22
    1906:	17 06       	cpc	r1, r23
    1908:	18 06       	cpc	r1, r24
    190a:	09 06       	cpc	r0, r25
    190c:	08 95       	ret

0000190e <__fp_pscB>:
    190e:	00 24       	eor	r0, r0
    1910:	0a 94       	dec	r0
    1912:	12 16       	cp	r1, r18
    1914:	13 06       	cpc	r1, r19
    1916:	14 06       	cpc	r1, r20
    1918:	05 06       	cpc	r0, r21
    191a:	08 95       	ret

0000191c <__fp_round>:
    191c:	09 2e       	mov	r0, r25
    191e:	03 94       	inc	r0
    1920:	00 0c       	add	r0, r0
    1922:	11 f4       	brne	.+4      	; 0x1928 <__fp_round+0xc>
    1924:	88 23       	and	r24, r24
    1926:	52 f0       	brmi	.+20     	; 0x193c <__fp_round+0x20>
    1928:	bb 0f       	add	r27, r27
    192a:	40 f4       	brcc	.+16     	; 0x193c <__fp_round+0x20>
    192c:	bf 2b       	or	r27, r31
    192e:	11 f4       	brne	.+4      	; 0x1934 <__fp_round+0x18>
    1930:	60 ff       	sbrs	r22, 0
    1932:	04 c0       	rjmp	.+8      	; 0x193c <__fp_round+0x20>
    1934:	6f 5f       	subi	r22, 0xFF	; 255
    1936:	7f 4f       	sbci	r23, 0xFF	; 255
    1938:	8f 4f       	sbci	r24, 0xFF	; 255
    193a:	9f 4f       	sbci	r25, 0xFF	; 255
    193c:	08 95       	ret

0000193e <__mulsi3>:
    193e:	db 01       	movw	r26, r22
    1940:	8f 93       	push	r24
    1942:	9f 93       	push	r25
    1944:	0e 94 af 0c 	call	0x195e	; 0x195e <__muluhisi3>
    1948:	bf 91       	pop	r27
    194a:	af 91       	pop	r26
    194c:	a2 9f       	mul	r26, r18
    194e:	80 0d       	add	r24, r0
    1950:	91 1d       	adc	r25, r1
    1952:	a3 9f       	mul	r26, r19
    1954:	90 0d       	add	r25, r0
    1956:	b2 9f       	mul	r27, r18
    1958:	90 0d       	add	r25, r0
    195a:	11 24       	eor	r1, r1
    195c:	08 95       	ret

0000195e <__muluhisi3>:
    195e:	0e 94 c0 0c 	call	0x1980	; 0x1980 <__umulhisi3>
    1962:	a5 9f       	mul	r26, r21
    1964:	90 0d       	add	r25, r0
    1966:	b4 9f       	mul	r27, r20
    1968:	90 0d       	add	r25, r0
    196a:	a4 9f       	mul	r26, r20
    196c:	80 0d       	add	r24, r0
    196e:	91 1d       	adc	r25, r1
    1970:	11 24       	eor	r1, r1
    1972:	08 95       	ret

00001974 <__tablejump2__>:
    1974:	ee 0f       	add	r30, r30
    1976:	ff 1f       	adc	r31, r31
    1978:	05 90       	lpm	r0, Z+
    197a:	f4 91       	lpm	r31, Z
    197c:	e0 2d       	mov	r30, r0
    197e:	09 94       	ijmp

00001980 <__umulhisi3>:
    1980:	a2 9f       	mul	r26, r18
    1982:	b0 01       	movw	r22, r0
    1984:	b3 9f       	mul	r27, r19
    1986:	c0 01       	movw	r24, r0
    1988:	a3 9f       	mul	r26, r19
    198a:	70 0d       	add	r23, r0
    198c:	81 1d       	adc	r24, r1
    198e:	11 24       	eor	r1, r1
    1990:	91 1d       	adc	r25, r1
    1992:	b2 9f       	mul	r27, r18
    1994:	70 0d       	add	r23, r0
    1996:	81 1d       	adc	r24, r1
    1998:	11 24       	eor	r1, r1
    199a:	91 1d       	adc	r25, r1
    199c:	08 95       	ret

0000199e <__do_global_dtors>:
    199e:	13 e0       	ldi	r17, 0x03	; 3
    19a0:	cd e2       	ldi	r28, 0x2D	; 45
    19a2:	d3 e0       	ldi	r29, 0x03	; 3
    19a4:	04 c0       	rjmp	.+8      	; 0x19ae <__do_global_dtors+0x10>
    19a6:	fe 01       	movw	r30, r28
    19a8:	0e 94 ba 0c 	call	0x1974	; 0x1974 <__tablejump2__>
    19ac:	21 96       	adiw	r28, 0x01	; 1
    19ae:	ce 32       	cpi	r28, 0x2E	; 46
    19b0:	d1 07       	cpc	r29, r17
    19b2:	c9 f7       	brne	.-14     	; 0x19a6 <__do_global_dtors+0x8>
    19b4:	f8 94       	cli

000019b6 <__stop_program>:
    19b6:	ff cf       	rjmp	.-2      	; 0x19b6 <__stop_program>
